
bin\Debug\Assistive_Devices_Code_V1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800200  000019c4  00001a58  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000019c4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  00001b60  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .debug_aranges 000001a0  00000000  00000000  00001b63  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000335  00000000  00000000  00001d03  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001eac  00000000  00000000  00002038  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001079  00000000  00000000  00003ee4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001565  00000000  00000000  00004f5d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002b0  00000000  00000000  000064c4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000470  00000000  00000000  00006774  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000896  00000000  00000000  00006be4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  0000747a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
       8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
       c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      10:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      14:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      18:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      1c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      20:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      24:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      28:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      2c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      30:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      34:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      38:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      3c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      40:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      44:	0c 94 86 05 	jmp	0xb0c	; 0xb0c <__vector_17>
      48:	0c 94 ad 05 	jmp	0xb5a	; 0xb5a <__vector_18>
      4c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      50:	0c 94 50 05 	jmp	0xaa0	; 0xaa0 <__vector_20>
      54:	0c 94 53 01 	jmp	0x2a6	; 0x2a6 <__vector_21>
      58:	0c 94 b2 01 	jmp	0x364	; 0x364 <__vector_22>
      5c:	0c 94 8d 00 	jmp	0x11a	; 0x11a <__vector_23>
      60:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      64:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      68:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      6c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      70:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      74:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      78:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      7c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      80:	0c 94 7f 01 	jmp	0x2fe	; 0x2fe <__vector_32>
      84:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__vector_33>
      88:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      8c:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__vector_35>
      90:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      94:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      98:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      9c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      a0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      a4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      a8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      ac:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      b0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      b4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      b8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      bc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      c0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      c4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      c8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      cc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      d0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      d4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      d8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      dc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      e0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	13 e0       	ldi	r17, 0x03	; 3
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e4 ec       	ldi	r30, 0xC4	; 196
      fc:	f9 e1       	ldi	r31, 0x19	; 25
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a8 30       	cpi	r26, 0x08	; 8
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>
     10e:	0e 94 94 03 	call	0x728	; 0x728 <main>
     112:	0c 94 e0 0c 	jmp	0x19c0	; 0x19c0 <_exit>

00000116 <__bad_interrupt>:
     116:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000011a <__vector_23>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include "h_bridge.h"

ISR(TIMER0_OVF_vect)
{
     11a:	1f 92       	push	r1
     11c:	0f 92       	push	r0
     11e:	0f b6       	in	r0, 0x3f	; 63
     120:	0f 92       	push	r0
     122:	00 90 5b 00 	lds	r0, 0x005B
     126:	0f 92       	push	r0
     128:	11 24       	eor	r1, r1
     12a:	8f 93       	push	r24
     12c:	af 93       	push	r26
     12e:	bf 93       	push	r27
     130:	ef 93       	push	r30
     132:	ff 93       	push	r31
     134:	df 93       	push	r29
     136:	cf 93       	push	r28
     138:	cd b7       	in	r28, 0x3d	; 61
     13a:	de b7       	in	r29, 0x3e	; 62
	if (OCR0A == 0 && OCR0B == 0)
     13c:	e7 e4       	ldi	r30, 0x47	; 71
     13e:	f0 e0       	ldi	r31, 0x00	; 0
     140:	80 81       	ld	r24, Z
     142:	88 23       	and	r24, r24
     144:	a1 f4       	brne	.+40     	; 0x16e <__vector_23+0x54>
     146:	e8 e4       	ldi	r30, 0x48	; 72
     148:	f0 e0       	ldi	r31, 0x00	; 0
     14a:	80 81       	ld	r24, Z
     14c:	88 23       	and	r24, r24
     14e:	79 f4       	brne	.+30     	; 0x16e <__vector_23+0x54>
	{
		PORT_RPWM &= ~(1<<PIN_RPWM);
     150:	a5 e2       	ldi	r26, 0x25	; 37
     152:	b0 e0       	ldi	r27, 0x00	; 0
     154:	e5 e2       	ldi	r30, 0x25	; 37
     156:	f0 e0       	ldi	r31, 0x00	; 0
     158:	80 81       	ld	r24, Z
     15a:	8f 7d       	andi	r24, 0xDF	; 223
     15c:	8c 93       	st	X, r24
		PORT_LPWM &= ~(1<<PIN_LPWM);
     15e:	a5 e2       	ldi	r26, 0x25	; 37
     160:	b0 e0       	ldi	r27, 0x00	; 0
     162:	e5 e2       	ldi	r30, 0x25	; 37
     164:	f0 e0       	ldi	r31, 0x00	; 0
     166:	80 81       	ld	r24, Z
     168:	8f 7e       	andi	r24, 0xEF	; 239
     16a:	8c 93       	st	X, r24
     16c:	27 c0       	rjmp	.+78     	; 0x1bc <__vector_23+0xa2>
	}
	else if (OCR0A != 0)
     16e:	e7 e4       	ldi	r30, 0x47	; 71
     170:	f0 e0       	ldi	r31, 0x00	; 0
     172:	80 81       	ld	r24, Z
     174:	88 23       	and	r24, r24
     176:	79 f0       	breq	.+30     	; 0x196 <__vector_23+0x7c>
	{
		PORT_LPWM &= ~(1<<PIN_LPWM);
     178:	a5 e2       	ldi	r26, 0x25	; 37
     17a:	b0 e0       	ldi	r27, 0x00	; 0
     17c:	e5 e2       	ldi	r30, 0x25	; 37
     17e:	f0 e0       	ldi	r31, 0x00	; 0
     180:	80 81       	ld	r24, Z
     182:	8f 7e       	andi	r24, 0xEF	; 239
     184:	8c 93       	st	X, r24
		PORT_RPWM |= (1<<PIN_RPWM);
     186:	a5 e2       	ldi	r26, 0x25	; 37
     188:	b0 e0       	ldi	r27, 0x00	; 0
     18a:	e5 e2       	ldi	r30, 0x25	; 37
     18c:	f0 e0       	ldi	r31, 0x00	; 0
     18e:	80 81       	ld	r24, Z
     190:	80 62       	ori	r24, 0x20	; 32
     192:	8c 93       	st	X, r24
     194:	13 c0       	rjmp	.+38     	; 0x1bc <__vector_23+0xa2>
	}
	else if (OCR0B != 0)
     196:	e8 e4       	ldi	r30, 0x48	; 72
     198:	f0 e0       	ldi	r31, 0x00	; 0
     19a:	80 81       	ld	r24, Z
     19c:	88 23       	and	r24, r24
     19e:	71 f0       	breq	.+28     	; 0x1bc <__vector_23+0xa2>
	{
		PORT_RPWM &= ~(1<<PIN_RPWM);
     1a0:	a5 e2       	ldi	r26, 0x25	; 37
     1a2:	b0 e0       	ldi	r27, 0x00	; 0
     1a4:	e5 e2       	ldi	r30, 0x25	; 37
     1a6:	f0 e0       	ldi	r31, 0x00	; 0
     1a8:	80 81       	ld	r24, Z
     1aa:	8f 7d       	andi	r24, 0xDF	; 223
     1ac:	8c 93       	st	X, r24
		PORT_LPWM |= (1<<PIN_LPWM);
     1ae:	a5 e2       	ldi	r26, 0x25	; 37
     1b0:	b0 e0       	ldi	r27, 0x00	; 0
     1b2:	e5 e2       	ldi	r30, 0x25	; 37
     1b4:	f0 e0       	ldi	r31, 0x00	; 0
     1b6:	80 81       	ld	r24, Z
     1b8:	80 61       	ori	r24, 0x10	; 16
     1ba:	8c 93       	st	X, r24
	}
}
     1bc:	cf 91       	pop	r28
     1be:	df 91       	pop	r29
     1c0:	ff 91       	pop	r31
     1c2:	ef 91       	pop	r30
     1c4:	bf 91       	pop	r27
     1c6:	af 91       	pop	r26
     1c8:	8f 91       	pop	r24
     1ca:	0f 90       	pop	r0
     1cc:	00 92 5b 00 	sts	0x005B, r0
     1d0:	0f 90       	pop	r0
     1d2:	0f be       	out	0x3f, r0	; 63
     1d4:	0f 90       	pop	r0
     1d6:	1f 90       	pop	r1
     1d8:	18 95       	reti

000001da <__vector_35>:
//		PORT_RPWM1 &= ~(1<<PIN_RPWM1);
//		PORT_LPWM1 |= (1<<PIN_LPWM1);
//	}
//}
ISR(TIMER3_OVF_vect)
{
     1da:	1f 92       	push	r1
     1dc:	0f 92       	push	r0
     1de:	0f b6       	in	r0, 0x3f	; 63
     1e0:	0f 92       	push	r0
     1e2:	00 90 5b 00 	lds	r0, 0x005B
     1e6:	0f 92       	push	r0
     1e8:	11 24       	eor	r1, r1
     1ea:	8f 93       	push	r24
     1ec:	9f 93       	push	r25
     1ee:	af 93       	push	r26
     1f0:	bf 93       	push	r27
     1f2:	ef 93       	push	r30
     1f4:	ff 93       	push	r31
     1f6:	df 93       	push	r29
     1f8:	cf 93       	push	r28
     1fa:	cd b7       	in	r28, 0x3d	; 61
     1fc:	de b7       	in	r29, 0x3e	; 62
	if (OCR3A == 0 && OCR3B == 0)
     1fe:	e8 e9       	ldi	r30, 0x98	; 152
     200:	f0 e0       	ldi	r31, 0x00	; 0
     202:	80 81       	ld	r24, Z
     204:	91 81       	ldd	r25, Z+1	; 0x01
     206:	00 97       	sbiw	r24, 0x00	; 0
     208:	a9 f4       	brne	.+42     	; 0x234 <__vector_35+0x5a>
     20a:	ea e9       	ldi	r30, 0x9A	; 154
     20c:	f0 e0       	ldi	r31, 0x00	; 0
     20e:	80 81       	ld	r24, Z
     210:	91 81       	ldd	r25, Z+1	; 0x01
     212:	00 97       	sbiw	r24, 0x00	; 0
     214:	79 f4       	brne	.+30     	; 0x234 <__vector_35+0x5a>
	{
		PORT_RPWM2 &= ~(1<<PIN_RPWM2);
     216:	a2 e0       	ldi	r26, 0x02	; 2
     218:	b1 e0       	ldi	r27, 0x01	; 1
     21a:	e2 e0       	ldi	r30, 0x02	; 2
     21c:	f1 e0       	ldi	r31, 0x01	; 1
     21e:	80 81       	ld	r24, Z
     220:	8f 7b       	andi	r24, 0xBF	; 191
     222:	8c 93       	st	X, r24
		PORT_LPWM2 &= ~(1<<PIN_LPWM2);
     224:	a1 e3       	ldi	r26, 0x31	; 49
     226:	b0 e0       	ldi	r27, 0x00	; 0
     228:	e1 e3       	ldi	r30, 0x31	; 49
     22a:	f0 e0       	ldi	r31, 0x00	; 0
     22c:	80 81       	ld	r24, Z
     22e:	8f 7d       	andi	r24, 0xDF	; 223
     230:	8c 93       	st	X, r24
     232:	29 c0       	rjmp	.+82     	; 0x286 <__vector_35+0xac>
	}
	else if (OCR3A != 0)
     234:	e8 e9       	ldi	r30, 0x98	; 152
     236:	f0 e0       	ldi	r31, 0x00	; 0
     238:	80 81       	ld	r24, Z
     23a:	91 81       	ldd	r25, Z+1	; 0x01
     23c:	00 97       	sbiw	r24, 0x00	; 0
     23e:	79 f0       	breq	.+30     	; 0x25e <__vector_35+0x84>
	{
		PORT_LPWM2 &= ~(1<<PIN_LPWM2);
     240:	a1 e3       	ldi	r26, 0x31	; 49
     242:	b0 e0       	ldi	r27, 0x00	; 0
     244:	e1 e3       	ldi	r30, 0x31	; 49
     246:	f0 e0       	ldi	r31, 0x00	; 0
     248:	80 81       	ld	r24, Z
     24a:	8f 7d       	andi	r24, 0xDF	; 223
     24c:	8c 93       	st	X, r24
		PORT_RPWM2 |= (1<<PIN_RPWM2);
     24e:	a2 e0       	ldi	r26, 0x02	; 2
     250:	b1 e0       	ldi	r27, 0x01	; 1
     252:	e2 e0       	ldi	r30, 0x02	; 2
     254:	f1 e0       	ldi	r31, 0x01	; 1
     256:	80 81       	ld	r24, Z
     258:	80 64       	ori	r24, 0x40	; 64
     25a:	8c 93       	st	X, r24
     25c:	14 c0       	rjmp	.+40     	; 0x286 <__vector_35+0xac>
	}
	else if (OCR3B != 0)
     25e:	ea e9       	ldi	r30, 0x9A	; 154
     260:	f0 e0       	ldi	r31, 0x00	; 0
     262:	80 81       	ld	r24, Z
     264:	91 81       	ldd	r25, Z+1	; 0x01
     266:	00 97       	sbiw	r24, 0x00	; 0
     268:	71 f0       	breq	.+28     	; 0x286 <__vector_35+0xac>
	{
		PORT_RPWM2 &= ~(1<<PIN_RPWM2);
     26a:	a2 e0       	ldi	r26, 0x02	; 2
     26c:	b1 e0       	ldi	r27, 0x01	; 1
     26e:	e2 e0       	ldi	r30, 0x02	; 2
     270:	f1 e0       	ldi	r31, 0x01	; 1
     272:	80 81       	ld	r24, Z
     274:	8f 7b       	andi	r24, 0xBF	; 191
     276:	8c 93       	st	X, r24
		PORT_LPWM2 |= (1<<PIN_LPWM2);
     278:	a1 e3       	ldi	r26, 0x31	; 49
     27a:	b0 e0       	ldi	r27, 0x00	; 0
     27c:	e1 e3       	ldi	r30, 0x31	; 49
     27e:	f0 e0       	ldi	r31, 0x00	; 0
     280:	80 81       	ld	r24, Z
     282:	80 62       	ori	r24, 0x20	; 32
     284:	8c 93       	st	X, r24
	}
}
     286:	cf 91       	pop	r28
     288:	df 91       	pop	r29
     28a:	ff 91       	pop	r31
     28c:	ef 91       	pop	r30
     28e:	bf 91       	pop	r27
     290:	af 91       	pop	r26
     292:	9f 91       	pop	r25
     294:	8f 91       	pop	r24
     296:	0f 90       	pop	r0
     298:	00 92 5b 00 	sts	0x005B, r0
     29c:	0f 90       	pop	r0
     29e:	0f be       	out	0x3f, r0	; 63
     2a0:	0f 90       	pop	r0
     2a2:	1f 90       	pop	r1
     2a4:	18 95       	reti

000002a6 <__vector_21>:

ISR(TIMER0_COMPA_vect)
{
     2a6:	1f 92       	push	r1
     2a8:	0f 92       	push	r0
     2aa:	0f b6       	in	r0, 0x3f	; 63
     2ac:	0f 92       	push	r0
     2ae:	00 90 5b 00 	lds	r0, 0x005B
     2b2:	0f 92       	push	r0
     2b4:	11 24       	eor	r1, r1
     2b6:	8f 93       	push	r24
     2b8:	af 93       	push	r26
     2ba:	bf 93       	push	r27
     2bc:	ef 93       	push	r30
     2be:	ff 93       	push	r31
     2c0:	df 93       	push	r29
     2c2:	cf 93       	push	r28
     2c4:	cd b7       	in	r28, 0x3d	; 61
     2c6:	de b7       	in	r29, 0x3e	; 62
	if (OCR0A != 255)
     2c8:	e7 e4       	ldi	r30, 0x47	; 71
     2ca:	f0 e0       	ldi	r31, 0x00	; 0
     2cc:	80 81       	ld	r24, Z
     2ce:	8f 3f       	cpi	r24, 0xFF	; 255
     2d0:	39 f0       	breq	.+14     	; 0x2e0 <__vector_21+0x3a>
	{
		PORT_RPWM &= ~(1<<PIN_RPWM);
     2d2:	a5 e2       	ldi	r26, 0x25	; 37
     2d4:	b0 e0       	ldi	r27, 0x00	; 0
     2d6:	e5 e2       	ldi	r30, 0x25	; 37
     2d8:	f0 e0       	ldi	r31, 0x00	; 0
     2da:	80 81       	ld	r24, Z
     2dc:	8f 7d       	andi	r24, 0xDF	; 223
     2de:	8c 93       	st	X, r24
	}
}
     2e0:	cf 91       	pop	r28
     2e2:	df 91       	pop	r29
     2e4:	ff 91       	pop	r31
     2e6:	ef 91       	pop	r30
     2e8:	bf 91       	pop	r27
     2ea:	af 91       	pop	r26
     2ec:	8f 91       	pop	r24
     2ee:	0f 90       	pop	r0
     2f0:	00 92 5b 00 	sts	0x005B, r0
     2f4:	0f 90       	pop	r0
     2f6:	0f be       	out	0x3f, r0	; 63
     2f8:	0f 90       	pop	r0
     2fa:	1f 90       	pop	r1
     2fc:	18 95       	reti

000002fe <__vector_32>:
//		PORT_RPWM1 &= ~(1<<PIN_RPWM1);
//	}
//}

ISR(TIMER3_COMPA_vect)
{
     2fe:	1f 92       	push	r1
     300:	0f 92       	push	r0
     302:	0f b6       	in	r0, 0x3f	; 63
     304:	0f 92       	push	r0
     306:	00 90 5b 00 	lds	r0, 0x005B
     30a:	0f 92       	push	r0
     30c:	11 24       	eor	r1, r1
     30e:	2f 93       	push	r18
     310:	8f 93       	push	r24
     312:	9f 93       	push	r25
     314:	af 93       	push	r26
     316:	bf 93       	push	r27
     318:	ef 93       	push	r30
     31a:	ff 93       	push	r31
     31c:	df 93       	push	r29
     31e:	cf 93       	push	r28
     320:	cd b7       	in	r28, 0x3d	; 61
     322:	de b7       	in	r29, 0x3e	; 62
	if (OCR3A != 65535)
     324:	e8 e9       	ldi	r30, 0x98	; 152
     326:	f0 e0       	ldi	r31, 0x00	; 0
     328:	80 81       	ld	r24, Z
     32a:	91 81       	ldd	r25, Z+1	; 0x01
     32c:	2f ef       	ldi	r18, 0xFF	; 255
     32e:	8f 3f       	cpi	r24, 0xFF	; 255
     330:	92 07       	cpc	r25, r18
     332:	39 f0       	breq	.+14     	; 0x342 <__vector_32+0x44>
	{
		PORT_RPWM2 &= ~(1<<PIN_RPWM2);
     334:	a2 e0       	ldi	r26, 0x02	; 2
     336:	b1 e0       	ldi	r27, 0x01	; 1
     338:	e2 e0       	ldi	r30, 0x02	; 2
     33a:	f1 e0       	ldi	r31, 0x01	; 1
     33c:	80 81       	ld	r24, Z
     33e:	8f 7b       	andi	r24, 0xBF	; 191
     340:	8c 93       	st	X, r24
	}
}
     342:	cf 91       	pop	r28
     344:	df 91       	pop	r29
     346:	ff 91       	pop	r31
     348:	ef 91       	pop	r30
     34a:	bf 91       	pop	r27
     34c:	af 91       	pop	r26
     34e:	9f 91       	pop	r25
     350:	8f 91       	pop	r24
     352:	2f 91       	pop	r18
     354:	0f 90       	pop	r0
     356:	00 92 5b 00 	sts	0x005B, r0
     35a:	0f 90       	pop	r0
     35c:	0f be       	out	0x3f, r0	; 63
     35e:	0f 90       	pop	r0
     360:	1f 90       	pop	r1
     362:	18 95       	reti

00000364 <__vector_22>:

ISR(TIMER0_COMPB_vect)
{
     364:	1f 92       	push	r1
     366:	0f 92       	push	r0
     368:	0f b6       	in	r0, 0x3f	; 63
     36a:	0f 92       	push	r0
     36c:	00 90 5b 00 	lds	r0, 0x005B
     370:	0f 92       	push	r0
     372:	11 24       	eor	r1, r1
     374:	8f 93       	push	r24
     376:	af 93       	push	r26
     378:	bf 93       	push	r27
     37a:	ef 93       	push	r30
     37c:	ff 93       	push	r31
     37e:	df 93       	push	r29
     380:	cf 93       	push	r28
     382:	cd b7       	in	r28, 0x3d	; 61
     384:	de b7       	in	r29, 0x3e	; 62
	if (OCR0B != 255)
     386:	e8 e4       	ldi	r30, 0x48	; 72
     388:	f0 e0       	ldi	r31, 0x00	; 0
     38a:	80 81       	ld	r24, Z
     38c:	8f 3f       	cpi	r24, 0xFF	; 255
     38e:	39 f0       	breq	.+14     	; 0x39e <__vector_22+0x3a>
	{
		PORT_LPWM &= ~(1<<PIN_LPWM);
     390:	a5 e2       	ldi	r26, 0x25	; 37
     392:	b0 e0       	ldi	r27, 0x00	; 0
     394:	e5 e2       	ldi	r30, 0x25	; 37
     396:	f0 e0       	ldi	r31, 0x00	; 0
     398:	80 81       	ld	r24, Z
     39a:	8f 7e       	andi	r24, 0xEF	; 239
     39c:	8c 93       	st	X, r24
	}
}
     39e:	cf 91       	pop	r28
     3a0:	df 91       	pop	r29
     3a2:	ff 91       	pop	r31
     3a4:	ef 91       	pop	r30
     3a6:	bf 91       	pop	r27
     3a8:	af 91       	pop	r26
     3aa:	8f 91       	pop	r24
     3ac:	0f 90       	pop	r0
     3ae:	00 92 5b 00 	sts	0x005B, r0
     3b2:	0f 90       	pop	r0
     3b4:	0f be       	out	0x3f, r0	; 63
     3b6:	0f 90       	pop	r0
     3b8:	1f 90       	pop	r1
     3ba:	18 95       	reti

000003bc <__vector_33>:
//		PORT_LPWM1 &= ~(1<<PIN_LPWM1);
//	}
//}

ISR(TIMER3_COMPB_vect)
{
     3bc:	1f 92       	push	r1
     3be:	0f 92       	push	r0
     3c0:	0f b6       	in	r0, 0x3f	; 63
     3c2:	0f 92       	push	r0
     3c4:	00 90 5b 00 	lds	r0, 0x005B
     3c8:	0f 92       	push	r0
     3ca:	11 24       	eor	r1, r1
     3cc:	2f 93       	push	r18
     3ce:	8f 93       	push	r24
     3d0:	9f 93       	push	r25
     3d2:	af 93       	push	r26
     3d4:	bf 93       	push	r27
     3d6:	ef 93       	push	r30
     3d8:	ff 93       	push	r31
     3da:	df 93       	push	r29
     3dc:	cf 93       	push	r28
     3de:	cd b7       	in	r28, 0x3d	; 61
     3e0:	de b7       	in	r29, 0x3e	; 62
	if (OCR3B != 65535)
     3e2:	ea e9       	ldi	r30, 0x9A	; 154
     3e4:	f0 e0       	ldi	r31, 0x00	; 0
     3e6:	80 81       	ld	r24, Z
     3e8:	91 81       	ldd	r25, Z+1	; 0x01
     3ea:	2f ef       	ldi	r18, 0xFF	; 255
     3ec:	8f 3f       	cpi	r24, 0xFF	; 255
     3ee:	92 07       	cpc	r25, r18
     3f0:	39 f0       	breq	.+14     	; 0x400 <__vector_33+0x44>
	{
		PORT_LPWM2 &= ~(1<<PIN_LPWM2);
     3f2:	a1 e3       	ldi	r26, 0x31	; 49
     3f4:	b0 e0       	ldi	r27, 0x00	; 0
     3f6:	e1 e3       	ldi	r30, 0x31	; 49
     3f8:	f0 e0       	ldi	r31, 0x00	; 0
     3fa:	80 81       	ld	r24, Z
     3fc:	8f 7d       	andi	r24, 0xDF	; 223
     3fe:	8c 93       	st	X, r24
	}
}
     400:	cf 91       	pop	r28
     402:	df 91       	pop	r29
     404:	ff 91       	pop	r31
     406:	ef 91       	pop	r30
     408:	bf 91       	pop	r27
     40a:	af 91       	pop	r26
     40c:	9f 91       	pop	r25
     40e:	8f 91       	pop	r24
     410:	2f 91       	pop	r18
     412:	0f 90       	pop	r0
     414:	00 92 5b 00 	sts	0x005B, r0
     418:	0f 90       	pop	r0
     41a:	0f be       	out	0x3f, r0	; 63
     41c:	0f 90       	pop	r0
     41e:	1f 90       	pop	r1
     420:	18 95       	reti

00000422 <init_h_bridge>:

void init_h_bridge(void)
{
     422:	df 93       	push	r29
     424:	cf 93       	push	r28
     426:	cd b7       	in	r28, 0x3d	; 61
     428:	de b7       	in	r29, 0x3e	; 62
	// Config pins as output
	DDR_RPWM |= (1<<PIN_RPWM);
     42a:	a4 e2       	ldi	r26, 0x24	; 36
     42c:	b0 e0       	ldi	r27, 0x00	; 0
     42e:	e4 e2       	ldi	r30, 0x24	; 36
     430:	f0 e0       	ldi	r31, 0x00	; 0
     432:	80 81       	ld	r24, Z
     434:	80 62       	ori	r24, 0x20	; 32
     436:	8c 93       	st	X, r24
	DDR_LPWM |= (1<<PIN_LPWM);
     438:	a4 e2       	ldi	r26, 0x24	; 36
     43a:	b0 e0       	ldi	r27, 0x00	; 0
     43c:	e4 e2       	ldi	r30, 0x24	; 36
     43e:	f0 e0       	ldi	r31, 0x00	; 0
     440:	80 81       	ld	r24, Z
     442:	80 61       	ori	r24, 0x10	; 16
     444:	8c 93       	st	X, r24
//	DDR_RPWM1 |= (1<<PIN_RPWM1);
//	DDR_LPWM1 |= (1<<PIN_LPWM1);
	DDR_RPWM2 |= (1<<PIN_RPWM2);
     446:	a1 e0       	ldi	r26, 0x01	; 1
     448:	b1 e0       	ldi	r27, 0x01	; 1
     44a:	e1 e0       	ldi	r30, 0x01	; 1
     44c:	f1 e0       	ldi	r31, 0x01	; 1
     44e:	80 81       	ld	r24, Z
     450:	80 64       	ori	r24, 0x40	; 64
     452:	8c 93       	st	X, r24
	DDR_LPWM2 |= (1<<PIN_LPWM2);
     454:	a0 e3       	ldi	r26, 0x30	; 48
     456:	b0 e0       	ldi	r27, 0x00	; 0
     458:	e0 e3       	ldi	r30, 0x30	; 48
     45a:	f0 e0       	ldi	r31, 0x00	; 0
     45c:	80 81       	ld	r24, Z
     45e:	80 62       	ori	r24, 0x20	; 32
     460:	8c 93       	st	X, r24

	// Output low
	PORT_RPWM &= ~(1<<PIN_RPWM);
     462:	a5 e2       	ldi	r26, 0x25	; 37
     464:	b0 e0       	ldi	r27, 0x00	; 0
     466:	e5 e2       	ldi	r30, 0x25	; 37
     468:	f0 e0       	ldi	r31, 0x00	; 0
     46a:	80 81       	ld	r24, Z
     46c:	8f 7d       	andi	r24, 0xDF	; 223
     46e:	8c 93       	st	X, r24
	PORT_LPWM &= ~(1<<PIN_LPWM);
     470:	a5 e2       	ldi	r26, 0x25	; 37
     472:	b0 e0       	ldi	r27, 0x00	; 0
     474:	e5 e2       	ldi	r30, 0x25	; 37
     476:	f0 e0       	ldi	r31, 0x00	; 0
     478:	80 81       	ld	r24, Z
     47a:	8f 7e       	andi	r24, 0xEF	; 239
     47c:	8c 93       	st	X, r24
//	PORT_RPWM1 &= ~(1<<PIN_RPWM1);
//	PORT_LPWM1 &= ~(1<<PIN_LPWM1);
	PORT_RPWM2 &= ~(1<<PIN_RPWM2);
     47e:	a2 e0       	ldi	r26, 0x02	; 2
     480:	b1 e0       	ldi	r27, 0x01	; 1
     482:	e2 e0       	ldi	r30, 0x02	; 2
     484:	f1 e0       	ldi	r31, 0x01	; 1
     486:	80 81       	ld	r24, Z
     488:	8f 7b       	andi	r24, 0xBF	; 191
     48a:	8c 93       	st	X, r24
	PORT_LPWM2 &= ~(1<<PIN_LPWM2);
     48c:	a1 e3       	ldi	r26, 0x31	; 49
     48e:	b0 e0       	ldi	r27, 0x00	; 0
     490:	e1 e3       	ldi	r30, 0x31	; 49
     492:	f0 e0       	ldi	r31, 0x00	; 0
     494:	80 81       	ld	r24, Z
     496:	8f 7d       	andi	r24, 0xDF	; 223
     498:	8c 93       	st	X, r24



	// Use mode 0, clkdiv = 64
	TCCR0A = 0;
     49a:	e4 e4       	ldi	r30, 0x44	; 68
     49c:	f0 e0       	ldi	r31, 0x00	; 0
     49e:	10 82       	st	Z, r1
	TCCR0B = (0<<CS02) | (1<<CS01) | (1<<CS00);
     4a0:	e5 e4       	ldi	r30, 0x45	; 69
     4a2:	f0 e0       	ldi	r31, 0x00	; 0
     4a4:	83 e0       	ldi	r24, 0x03	; 3
     4a6:	80 83       	st	Z, r24

	// Disable PWM output
	OCR0A = 0;
     4a8:	e7 e4       	ldi	r30, 0x47	; 71
     4aa:	f0 e0       	ldi	r31, 0x00	; 0
     4ac:	10 82       	st	Z, r1
	OCR0B = 0;
     4ae:	e8 e4       	ldi	r30, 0x48	; 72
     4b0:	f0 e0       	ldi	r31, 0x00	; 0
     4b2:	10 82       	st	Z, r1

	// Interrupts on OCA, OCB and OVF
	TIMSK0 = (1<<OCIE0B) | (1<<OCIE0A) | (1<<TOIE0);
     4b4:	ee e6       	ldi	r30, 0x6E	; 110
     4b6:	f0 e0       	ldi	r31, 0x00	; 0
     4b8:	87 e0       	ldi	r24, 0x07	; 7
     4ba:	80 83       	st	Z, r24
//	OCR1B = 0;

	// Interrupts on OCA, OCB and OVF
//	TIMSK1 = (1<<OCIE1B) | (1<<OCIE1A) | (1<<TOIE1);

	TCCR3A = 0;
     4bc:	e0 e9       	ldi	r30, 0x90	; 144
     4be:	f0 e0       	ldi	r31, 0x00	; 0
     4c0:	10 82       	st	Z, r1
	TCCR3B = (1<<CS30);
     4c2:	e1 e9       	ldi	r30, 0x91	; 145
     4c4:	f0 e0       	ldi	r31, 0x00	; 0
     4c6:	81 e0       	ldi	r24, 0x01	; 1
     4c8:	80 83       	st	Z, r24

	// Disable PWM output
	OCR3A = 0;
     4ca:	e8 e9       	ldi	r30, 0x98	; 152
     4cc:	f0 e0       	ldi	r31, 0x00	; 0
     4ce:	11 82       	std	Z+1, r1	; 0x01
     4d0:	10 82       	st	Z, r1
	OCR3B = 0;
     4d2:	ea e9       	ldi	r30, 0x9A	; 154
     4d4:	f0 e0       	ldi	r31, 0x00	; 0
     4d6:	11 82       	std	Z+1, r1	; 0x01
     4d8:	10 82       	st	Z, r1

	// Interrupts on OCA, OCB and OVF
	TIMSK3 = (1<<OCIE3B) | (1<<OCIE3A) | (1<<TOIE3);
     4da:	e1 e7       	ldi	r30, 0x71	; 113
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	87 e0       	ldi	r24, 0x07	; 7
     4e0:	80 83       	st	Z, r24


	sei();
     4e2:	78 94       	sei
}
     4e4:	cf 91       	pop	r28
     4e6:	df 91       	pop	r29
     4e8:	08 95       	ret

000004ea <h_bridge_set_percentage>:

void h_bridge_set_percentage(signed char percentage)
{
     4ea:	df 93       	push	r29
     4ec:	cf 93       	push	r28
     4ee:	0f 92       	push	r0
     4f0:	cd b7       	in	r28, 0x3d	; 61
     4f2:	de b7       	in	r29, 0x3e	; 62
     4f4:	89 83       	std	Y+1, r24	; 0x01
	if (percentage >= -100 && percentage <= 100)
     4f6:	89 81       	ldd	r24, Y+1	; 0x01
     4f8:	8c 39       	cpi	r24, 0x9C	; 156
     4fa:	0c f4       	brge	.+2      	; 0x4fe <h_bridge_set_percentage+0x14>
     4fc:	46 c0       	rjmp	.+140    	; 0x58a <h_bridge_set_percentage+0xa0>
     4fe:	89 81       	ldd	r24, Y+1	; 0x01
     500:	85 36       	cpi	r24, 0x65	; 101
     502:	0c f0       	brlt	.+2      	; 0x506 <h_bridge_set_percentage+0x1c>
     504:	42 c0       	rjmp	.+132    	; 0x58a <h_bridge_set_percentage+0xa0>
	{
		if (percentage >= 0)
     506:	89 81       	ldd	r24, Y+1	; 0x01
     508:	88 23       	and	r24, r24
     50a:	04 f1       	brlt	.+64     	; 0x54c <h_bridge_set_percentage+0x62>
		{
			// Disable LPWM, calculate RPWM
			OCR0B = 0;
     50c:	e8 e4       	ldi	r30, 0x48	; 72
     50e:	f0 e0       	ldi	r31, 0x00	; 0
     510:	10 82       	st	Z, r1
			OCR0A = (255*percentage)/100;
     512:	e7 e4       	ldi	r30, 0x47	; 71
     514:	f0 e0       	ldi	r31, 0x00	; 0
     516:	89 81       	ldd	r24, Y+1	; 0x01
     518:	48 2f       	mov	r20, r24
     51a:	55 27       	eor	r21, r21
     51c:	47 fd       	sbrc	r20, 7
     51e:	50 95       	com	r21
     520:	ca 01       	movw	r24, r20
     522:	9c 01       	movw	r18, r24
     524:	22 0f       	add	r18, r18
     526:	33 1f       	adc	r19, r19
     528:	c9 01       	movw	r24, r18
     52a:	96 95       	lsr	r25
     52c:	98 2f       	mov	r25, r24
     52e:	88 27       	eor	r24, r24
     530:	97 95       	ror	r25
     532:	87 95       	ror	r24
     534:	82 1b       	sub	r24, r18
     536:	93 0b       	sbc	r25, r19
     538:	84 0f       	add	r24, r20
     53a:	95 1f       	adc	r25, r21
     53c:	24 e6       	ldi	r18, 0x64	; 100
     53e:	30 e0       	ldi	r19, 0x00	; 0
     540:	b9 01       	movw	r22, r18
     542:	0e 94 45 0c 	call	0x188a	; 0x188a <__divmodhi4>
     546:	cb 01       	movw	r24, r22
     548:	80 83       	st	Z, r24
     54a:	1f c0       	rjmp	.+62     	; 0x58a <h_bridge_set_percentage+0xa0>
		}
		else // percentage < 0
		{
			// Disable RPWM, calculate LPWM
			OCR0A = 0;
     54c:	e7 e4       	ldi	r30, 0x47	; 71
     54e:	f0 e0       	ldi	r31, 0x00	; 0
     550:	10 82       	st	Z, r1
			OCR0B = (255*percentage)/-100;
     552:	e8 e4       	ldi	r30, 0x48	; 72
     554:	f0 e0       	ldi	r31, 0x00	; 0
     556:	89 81       	ldd	r24, Y+1	; 0x01
     558:	48 2f       	mov	r20, r24
     55a:	55 27       	eor	r21, r21
     55c:	47 fd       	sbrc	r20, 7
     55e:	50 95       	com	r21
     560:	ca 01       	movw	r24, r20
     562:	9c 01       	movw	r18, r24
     564:	22 0f       	add	r18, r18
     566:	33 1f       	adc	r19, r19
     568:	c9 01       	movw	r24, r18
     56a:	96 95       	lsr	r25
     56c:	98 2f       	mov	r25, r24
     56e:	88 27       	eor	r24, r24
     570:	97 95       	ror	r25
     572:	87 95       	ror	r24
     574:	82 1b       	sub	r24, r18
     576:	93 0b       	sbc	r25, r19
     578:	84 0f       	add	r24, r20
     57a:	95 1f       	adc	r25, r21
     57c:	2c e9       	ldi	r18, 0x9C	; 156
     57e:	3f ef       	ldi	r19, 0xFF	; 255
     580:	b9 01       	movw	r22, r18
     582:	0e 94 45 0c 	call	0x188a	; 0x188a <__divmodhi4>
     586:	cb 01       	movw	r24, r22
     588:	80 83       	st	Z, r24
		}
	}
}
     58a:	0f 90       	pop	r0
     58c:	cf 91       	pop	r28
     58e:	df 91       	pop	r29
     590:	08 95       	ret

00000592 <h_bridge_set_percentage1>:


void h_bridge_set_percentage1(signed char percentage)
{
     592:	0f 93       	push	r16
     594:	1f 93       	push	r17
     596:	df 93       	push	r29
     598:	cf 93       	push	r28
     59a:	0f 92       	push	r0
     59c:	cd b7       	in	r28, 0x3d	; 61
     59e:	de b7       	in	r29, 0x3e	; 62
     5a0:	89 83       	std	Y+1, r24	; 0x01
	if (percentage >= -100 && percentage <= 100)
     5a2:	89 81       	ldd	r24, Y+1	; 0x01
     5a4:	8c 39       	cpi	r24, 0x9C	; 156
     5a6:	0c f4       	brge	.+2      	; 0x5aa <h_bridge_set_percentage1+0x18>
     5a8:	4e c0       	rjmp	.+156    	; 0x646 <h_bridge_set_percentage1+0xb4>
     5aa:	89 81       	ldd	r24, Y+1	; 0x01
     5ac:	85 36       	cpi	r24, 0x65	; 101
     5ae:	0c f0       	brlt	.+2      	; 0x5b2 <h_bridge_set_percentage1+0x20>
     5b0:	4a c0       	rjmp	.+148    	; 0x646 <h_bridge_set_percentage1+0xb4>
	{
		if (percentage >= 0)
     5b2:	89 81       	ldd	r24, Y+1	; 0x01
     5b4:	88 23       	and	r24, r24
     5b6:	24 f1       	brlt	.+72     	; 0x600 <h_bridge_set_percentage1+0x6e>
		{
			// Disable LPWM, calculate RPWM
			OCR1B = 0;
     5b8:	ea e8       	ldi	r30, 0x8A	; 138
     5ba:	f0 e0       	ldi	r31, 0x00	; 0
     5bc:	11 82       	std	Z+1, r1	; 0x01
     5be:	10 82       	st	Z, r1
			OCR1A = (65535*percentage)/100;
     5c0:	08 e8       	ldi	r16, 0x88	; 136
     5c2:	10 e0       	ldi	r17, 0x00	; 0
     5c4:	89 81       	ldd	r24, Y+1	; 0x01
     5c6:	99 27       	eor	r25, r25
     5c8:	87 fd       	sbrc	r24, 7
     5ca:	90 95       	com	r25
     5cc:	a9 2f       	mov	r26, r25
     5ce:	b9 2f       	mov	r27, r25
     5d0:	2f ef       	ldi	r18, 0xFF	; 255
     5d2:	3f ef       	ldi	r19, 0xFF	; 255
     5d4:	40 e0       	ldi	r20, 0x00	; 0
     5d6:	50 e0       	ldi	r21, 0x00	; 0
     5d8:	bc 01       	movw	r22, r24
     5da:	cd 01       	movw	r24, r26
     5dc:	0e 94 26 0c 	call	0x184c	; 0x184c <__mulsi3>
     5e0:	dc 01       	movw	r26, r24
     5e2:	cb 01       	movw	r24, r22
     5e4:	24 e6       	ldi	r18, 0x64	; 100
     5e6:	30 e0       	ldi	r19, 0x00	; 0
     5e8:	40 e0       	ldi	r20, 0x00	; 0
     5ea:	50 e0       	ldi	r21, 0x00	; 0
     5ec:	bc 01       	movw	r22, r24
     5ee:	cd 01       	movw	r24, r26
     5f0:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <__divmodsi4>
     5f4:	da 01       	movw	r26, r20
     5f6:	c9 01       	movw	r24, r18
     5f8:	f8 01       	movw	r30, r16
     5fa:	91 83       	std	Z+1, r25	; 0x01
     5fc:	80 83       	st	Z, r24
     5fe:	23 c0       	rjmp	.+70     	; 0x646 <h_bridge_set_percentage1+0xb4>
		}
		else // percentage < 0
		{
			// Disable RPWM, calculate LPWM
			OCR1A = 0;
     600:	e8 e8       	ldi	r30, 0x88	; 136
     602:	f0 e0       	ldi	r31, 0x00	; 0
     604:	11 82       	std	Z+1, r1	; 0x01
     606:	10 82       	st	Z, r1
			OCR1B = (65535*percentage)/-100;
     608:	0a e8       	ldi	r16, 0x8A	; 138
     60a:	10 e0       	ldi	r17, 0x00	; 0
     60c:	89 81       	ldd	r24, Y+1	; 0x01
     60e:	99 27       	eor	r25, r25
     610:	87 fd       	sbrc	r24, 7
     612:	90 95       	com	r25
     614:	a9 2f       	mov	r26, r25
     616:	b9 2f       	mov	r27, r25
     618:	2f ef       	ldi	r18, 0xFF	; 255
     61a:	3f ef       	ldi	r19, 0xFF	; 255
     61c:	40 e0       	ldi	r20, 0x00	; 0
     61e:	50 e0       	ldi	r21, 0x00	; 0
     620:	bc 01       	movw	r22, r24
     622:	cd 01       	movw	r24, r26
     624:	0e 94 26 0c 	call	0x184c	; 0x184c <__mulsi3>
     628:	dc 01       	movw	r26, r24
     62a:	cb 01       	movw	r24, r22
     62c:	2c e9       	ldi	r18, 0x9C	; 156
     62e:	3f ef       	ldi	r19, 0xFF	; 255
     630:	4f ef       	ldi	r20, 0xFF	; 255
     632:	5f ef       	ldi	r21, 0xFF	; 255
     634:	bc 01       	movw	r22, r24
     636:	cd 01       	movw	r24, r26
     638:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <__divmodsi4>
     63c:	da 01       	movw	r26, r20
     63e:	c9 01       	movw	r24, r18
     640:	f8 01       	movw	r30, r16
     642:	91 83       	std	Z+1, r25	; 0x01
     644:	80 83       	st	Z, r24
		}
	}
}
     646:	0f 90       	pop	r0
     648:	cf 91       	pop	r28
     64a:	df 91       	pop	r29
     64c:	1f 91       	pop	r17
     64e:	0f 91       	pop	r16
     650:	08 95       	ret

00000652 <h_bridge_set_percentage2>:
void h_bridge_set_percentage2(signed char percentage)
{
     652:	0f 93       	push	r16
     654:	1f 93       	push	r17
     656:	df 93       	push	r29
     658:	cf 93       	push	r28
     65a:	0f 92       	push	r0
     65c:	cd b7       	in	r28, 0x3d	; 61
     65e:	de b7       	in	r29, 0x3e	; 62
     660:	89 83       	std	Y+1, r24	; 0x01
	if (percentage >= -100 && percentage <= 100)
     662:	89 81       	ldd	r24, Y+1	; 0x01
     664:	8c 39       	cpi	r24, 0x9C	; 156
     666:	0c f4       	brge	.+2      	; 0x66a <h_bridge_set_percentage2+0x18>
     668:	4e c0       	rjmp	.+156    	; 0x706 <h_bridge_set_percentage2+0xb4>
     66a:	89 81       	ldd	r24, Y+1	; 0x01
     66c:	85 36       	cpi	r24, 0x65	; 101
     66e:	0c f0       	brlt	.+2      	; 0x672 <h_bridge_set_percentage2+0x20>
     670:	4a c0       	rjmp	.+148    	; 0x706 <h_bridge_set_percentage2+0xb4>
	{
		if (percentage >= 0)
     672:	89 81       	ldd	r24, Y+1	; 0x01
     674:	88 23       	and	r24, r24
     676:	24 f1       	brlt	.+72     	; 0x6c0 <h_bridge_set_percentage2+0x6e>
		{
			// Disable LPWM, calculate RPWM
			OCR3B = 0;
     678:	ea e9       	ldi	r30, 0x9A	; 154
     67a:	f0 e0       	ldi	r31, 0x00	; 0
     67c:	11 82       	std	Z+1, r1	; 0x01
     67e:	10 82       	st	Z, r1
			OCR3A = (65535*percentage)/100;
     680:	08 e9       	ldi	r16, 0x98	; 152
     682:	10 e0       	ldi	r17, 0x00	; 0
     684:	89 81       	ldd	r24, Y+1	; 0x01
     686:	99 27       	eor	r25, r25
     688:	87 fd       	sbrc	r24, 7
     68a:	90 95       	com	r25
     68c:	a9 2f       	mov	r26, r25
     68e:	b9 2f       	mov	r27, r25
     690:	2f ef       	ldi	r18, 0xFF	; 255
     692:	3f ef       	ldi	r19, 0xFF	; 255
     694:	40 e0       	ldi	r20, 0x00	; 0
     696:	50 e0       	ldi	r21, 0x00	; 0
     698:	bc 01       	movw	r22, r24
     69a:	cd 01       	movw	r24, r26
     69c:	0e 94 26 0c 	call	0x184c	; 0x184c <__mulsi3>
     6a0:	dc 01       	movw	r26, r24
     6a2:	cb 01       	movw	r24, r22
     6a4:	24 e6       	ldi	r18, 0x64	; 100
     6a6:	30 e0       	ldi	r19, 0x00	; 0
     6a8:	40 e0       	ldi	r20, 0x00	; 0
     6aa:	50 e0       	ldi	r21, 0x00	; 0
     6ac:	bc 01       	movw	r22, r24
     6ae:	cd 01       	movw	r24, r26
     6b0:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <__divmodsi4>
     6b4:	da 01       	movw	r26, r20
     6b6:	c9 01       	movw	r24, r18
     6b8:	f8 01       	movw	r30, r16
     6ba:	91 83       	std	Z+1, r25	; 0x01
     6bc:	80 83       	st	Z, r24
     6be:	23 c0       	rjmp	.+70     	; 0x706 <h_bridge_set_percentage2+0xb4>
		}
		else // percentage < 0
		{
			// Disable RPWM, calculate LPWM
			OCR3A = 0;
     6c0:	e8 e9       	ldi	r30, 0x98	; 152
     6c2:	f0 e0       	ldi	r31, 0x00	; 0
     6c4:	11 82       	std	Z+1, r1	; 0x01
     6c6:	10 82       	st	Z, r1
			OCR3B = (65535*percentage)/-100;
     6c8:	0a e9       	ldi	r16, 0x9A	; 154
     6ca:	10 e0       	ldi	r17, 0x00	; 0
     6cc:	89 81       	ldd	r24, Y+1	; 0x01
     6ce:	99 27       	eor	r25, r25
     6d0:	87 fd       	sbrc	r24, 7
     6d2:	90 95       	com	r25
     6d4:	a9 2f       	mov	r26, r25
     6d6:	b9 2f       	mov	r27, r25
     6d8:	2f ef       	ldi	r18, 0xFF	; 255
     6da:	3f ef       	ldi	r19, 0xFF	; 255
     6dc:	40 e0       	ldi	r20, 0x00	; 0
     6de:	50 e0       	ldi	r21, 0x00	; 0
     6e0:	bc 01       	movw	r22, r24
     6e2:	cd 01       	movw	r24, r26
     6e4:	0e 94 26 0c 	call	0x184c	; 0x184c <__mulsi3>
     6e8:	dc 01       	movw	r26, r24
     6ea:	cb 01       	movw	r24, r22
     6ec:	2c e9       	ldi	r18, 0x9C	; 156
     6ee:	3f ef       	ldi	r19, 0xFF	; 255
     6f0:	4f ef       	ldi	r20, 0xFF	; 255
     6f2:	5f ef       	ldi	r21, 0xFF	; 255
     6f4:	bc 01       	movw	r22, r24
     6f6:	cd 01       	movw	r24, r26
     6f8:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <__divmodsi4>
     6fc:	da 01       	movw	r26, r20
     6fe:	c9 01       	movw	r24, r18
     700:	f8 01       	movw	r30, r16
     702:	91 83       	std	Z+1, r25	; 0x01
     704:	80 83       	st	Z, r24
		}
	}
}
     706:	0f 90       	pop	r0
     708:	cf 91       	pop	r28
     70a:	df 91       	pop	r29
     70c:	1f 91       	pop	r17
     70e:	0f 91       	pop	r16
     710:	08 95       	ret

00000712 <init>:
#define volgende_steiger    PA6
#define vorige_steiger      PA7


void init(void)
{
     712:	df 93       	push	r29
     714:	cf 93       	push	r28
     716:	cd b7       	in	r28, 0x3d	; 61
     718:	de b7       	in	r29, 0x3e	; 62
	init_h_bridge();
     71a:	0e 94 11 02 	call	0x422	; 0x422 <init_h_bridge>
	init_servo();
     71e:	0e 94 d4 05 	call	0xba8	; 0xba8 <init_servo>
}
     722:	cf 91       	pop	r28
     724:	df 91       	pop	r29
     726:	08 95       	ret

00000728 <main>:

int main(void)
{
     728:	df 93       	push	r29
     72a:	cf 93       	push	r28
     72c:	00 d0       	rcall	.+0      	; 0x72e <main+0x6>
     72e:	0f 92       	push	r0
     730:	cd b7       	in	r28, 0x3d	; 61
     732:	de b7       	in	r29, 0x3e	; 62
	init();
     734:	0e 94 89 03 	call	0x712	; 0x712 <init>

	// output
	//bedingingpaneel
	PORTA &= (1<<home_knop);
     738:	a2 e2       	ldi	r26, 0x22	; 34
     73a:	b0 e0       	ldi	r27, 0x00	; 0
     73c:	e2 e2       	ldi	r30, 0x22	; 34
     73e:	f0 e0       	ldi	r31, 0x00	; 0
     740:	80 81       	ld	r24, Z
     742:	84 70       	andi	r24, 0x04	; 4
     744:	8c 93       	st	X, r24
	PORTA &= (1<<opbouw_knop);
     746:	a2 e2       	ldi	r26, 0x22	; 34
     748:	b0 e0       	ldi	r27, 0x00	; 0
     74a:	e2 e2       	ldi	r30, 0x22	; 34
     74c:	f0 e0       	ldi	r31, 0x00	; 0
     74e:	80 81       	ld	r24, Z
     750:	88 70       	andi	r24, 0x08	; 8
     752:	8c 93       	st	X, r24
	PORTA &= (1<<afbouw_knop);
     754:	a2 e2       	ldi	r26, 0x22	; 34
     756:	b0 e0       	ldi	r27, 0x00	; 0
     758:	e2 e2       	ldi	r30, 0x22	; 34
     75a:	f0 e0       	ldi	r31, 0x00	; 0
     75c:	80 81       	ld	r24, Z
     75e:	80 71       	andi	r24, 0x10	; 16
     760:	8c 93       	st	X, r24
	PORTA &= (1<<volgende_steiger);
     762:	a2 e2       	ldi	r26, 0x22	; 34
     764:	b0 e0       	ldi	r27, 0x00	; 0
     766:	e2 e2       	ldi	r30, 0x22	; 34
     768:	f0 e0       	ldi	r31, 0x00	; 0
     76a:	80 81       	ld	r24, Z
     76c:	80 74       	andi	r24, 0x40	; 64
     76e:	8c 93       	st	X, r24
	PORTA &= (1<<vorige_steiger);
     770:	a2 e2       	ldi	r26, 0x22	; 34
     772:	b0 e0       	ldi	r27, 0x00	; 0
     774:	e2 e2       	ldi	r30, 0x22	; 34
     776:	f0 e0       	ldi	r31, 0x00	; 0
     778:	80 81       	ld	r24, Z
     77a:	80 78       	andi	r24, 0x80	; 128
     77c:	8c 93       	st	X, r24
	//schakelaars
	PORTA &= (1<<home_switch);
     77e:	a2 e2       	ldi	r26, 0x22	; 34
     780:	b0 e0       	ldi	r27, 0x00	; 0
     782:	e2 e2       	ldi	r30, 0x22	; 34
     784:	f0 e0       	ldi	r31, 0x00	; 0
     786:	80 81       	ld	r24, Z
     788:	81 70       	andi	r24, 0x01	; 1
     78a:	8c 93       	st	X, r24
	PORTA &= (1<<top_switch);
     78c:	a2 e2       	ldi	r26, 0x22	; 34
     78e:	b0 e0       	ldi	r27, 0x00	; 0
     790:	e2 e2       	ldi	r30, 0x22	; 34
     792:	f0 e0       	ldi	r31, 0x00	; 0
     794:	80 81       	ld	r24, Z
     796:	82 70       	andi	r24, 0x02	; 2
     798:	8c 93       	st	X, r24
	PORTA &= (1<<middel_switch);
     79a:	a2 e2       	ldi	r26, 0x22	; 34
     79c:	b0 e0       	ldi	r27, 0x00	; 0
     79e:	e2 e2       	ldi	r30, 0x22	; 34
     7a0:	f0 e0       	ldi	r31, 0x00	; 0
     7a2:	80 81       	ld	r24, Z
     7a4:	80 72       	andi	r24, 0x20	; 32
     7a6:	8c 93       	st	X, r24
	int status = 0;
     7a8:	1a 82       	std	Y+2, r1	; 0x02
     7aa:	19 82       	std	Y+1, r1	; 0x01


	while (1)
	{
		switch(status)
     7ac:	89 81       	ldd	r24, Y+1	; 0x01
     7ae:	9a 81       	ldd	r25, Y+2	; 0x02
     7b0:	9c 83       	std	Y+4, r25	; 0x04
     7b2:	8b 83       	std	Y+3, r24	; 0x03
     7b4:	8b 81       	ldd	r24, Y+3	; 0x03
     7b6:	9c 81       	ldd	r25, Y+4	; 0x04
     7b8:	87 30       	cpi	r24, 0x07	; 7
     7ba:	91 05       	cpc	r25, r1
     7bc:	09 f4       	brne	.+2      	; 0x7c0 <main+0x98>
     7be:	cd c0       	rjmp	.+410    	; 0x95a <main+0x232>
     7c0:	8b 81       	ldd	r24, Y+3	; 0x03
     7c2:	9c 81       	ldd	r25, Y+4	; 0x04
     7c4:	88 30       	cpi	r24, 0x08	; 8
     7c6:	91 05       	cpc	r25, r1
     7c8:	4c f5       	brge	.+82     	; 0x81c <main+0xf4>
     7ca:	8b 81       	ldd	r24, Y+3	; 0x03
     7cc:	9c 81       	ldd	r25, Y+4	; 0x04
     7ce:	83 30       	cpi	r24, 0x03	; 3
     7d0:	91 05       	cpc	r25, r1
     7d2:	09 f4       	brne	.+2      	; 0x7d6 <main+0xae>
     7d4:	a2 c0       	rjmp	.+324    	; 0x91a <main+0x1f2>
     7d6:	8b 81       	ldd	r24, Y+3	; 0x03
     7d8:	9c 81       	ldd	r25, Y+4	; 0x04
     7da:	84 30       	cpi	r24, 0x04	; 4
     7dc:	91 05       	cpc	r25, r1
     7de:	8c f4       	brge	.+34     	; 0x802 <main+0xda>
     7e0:	8b 81       	ldd	r24, Y+3	; 0x03
     7e2:	9c 81       	ldd	r25, Y+4	; 0x04
     7e4:	81 30       	cpi	r24, 0x01	; 1
     7e6:	91 05       	cpc	r25, r1
     7e8:	09 f4       	brne	.+2      	; 0x7ec <main+0xc4>
     7ea:	6a c0       	rjmp	.+212    	; 0x8c0 <main+0x198>
     7ec:	8b 81       	ldd	r24, Y+3	; 0x03
     7ee:	9c 81       	ldd	r25, Y+4	; 0x04
     7f0:	82 30       	cpi	r24, 0x02	; 2
     7f2:	91 05       	cpc	r25, r1
     7f4:	0c f0       	brlt	.+2      	; 0x7f8 <main+0xd0>
     7f6:	74 c0       	rjmp	.+232    	; 0x8e0 <main+0x1b8>
     7f8:	8b 81       	ldd	r24, Y+3	; 0x03
     7fa:	9c 81       	ldd	r25, Y+4	; 0x04
     7fc:	00 97       	sbiw	r24, 0x00	; 0
     7fe:	c9 f1       	breq	.+114    	; 0x872 <main+0x14a>
     800:	d5 cf       	rjmp	.-86     	; 0x7ac <main+0x84>
     802:	8b 81       	ldd	r24, Y+3	; 0x03
     804:	9c 81       	ldd	r25, Y+4	; 0x04
     806:	85 30       	cpi	r24, 0x05	; 5
     808:	91 05       	cpc	r25, r1
     80a:	09 f4       	brne	.+2      	; 0x80e <main+0xe6>
     80c:	91 c0       	rjmp	.+290    	; 0x930 <main+0x208>
     80e:	8b 81       	ldd	r24, Y+3	; 0x03
     810:	9c 81       	ldd	r25, Y+4	; 0x04
     812:	86 30       	cpi	r24, 0x06	; 6
     814:	91 05       	cpc	r25, r1
     816:	0c f0       	brlt	.+2      	; 0x81a <main+0xf2>
     818:	f9 c0       	rjmp	.+498    	; 0xa0c <main+0x2e4>
     81a:	e3 c0       	rjmp	.+454    	; 0x9e2 <main+0x2ba>
     81c:	8b 81       	ldd	r24, Y+3	; 0x03
     81e:	9c 81       	ldd	r25, Y+4	; 0x04
     820:	8b 30       	cpi	r24, 0x0B	; 11
     822:	91 05       	cpc	r25, r1
     824:	09 f4       	brne	.+2      	; 0x828 <main+0x100>
     826:	bd c0       	rjmp	.+378    	; 0x9a2 <main+0x27a>
     828:	8b 81       	ldd	r24, Y+3	; 0x03
     82a:	9c 81       	ldd	r25, Y+4	; 0x04
     82c:	8c 30       	cpi	r24, 0x0C	; 12
     82e:	91 05       	cpc	r25, r1
     830:	6c f4       	brge	.+26     	; 0x84c <main+0x124>
     832:	8b 81       	ldd	r24, Y+3	; 0x03
     834:	9c 81       	ldd	r25, Y+4	; 0x04
     836:	89 30       	cpi	r24, 0x09	; 9
     838:	91 05       	cpc	r25, r1
     83a:	09 f4       	brne	.+2      	; 0x83e <main+0x116>
     83c:	9d c0       	rjmp	.+314    	; 0x978 <main+0x250>
     83e:	8b 81       	ldd	r24, Y+3	; 0x03
     840:	9c 81       	ldd	r25, Y+4	; 0x04
     842:	8a 30       	cpi	r24, 0x0A	; 10
     844:	91 05       	cpc	r25, r1
     846:	0c f0       	brlt	.+2      	; 0x84a <main+0x122>
     848:	01 c1       	rjmp	.+514    	; 0xa4c <main+0x324>
     84a:	eb c0       	rjmp	.+470    	; 0xa22 <main+0x2fa>
     84c:	8b 81       	ldd	r24, Y+3	; 0x03
     84e:	9c 81       	ldd	r25, Y+4	; 0x04
     850:	8d 30       	cpi	r24, 0x0D	; 13
     852:	91 05       	cpc	r25, r1
     854:	09 f4       	brne	.+2      	; 0x858 <main+0x130>
     856:	b0 c0       	rjmp	.+352    	; 0x9b8 <main+0x290>
     858:	8b 81       	ldd	r24, Y+3	; 0x03
     85a:	9c 81       	ldd	r25, Y+4	; 0x04
     85c:	8d 30       	cpi	r24, 0x0D	; 13
     85e:	91 05       	cpc	r25, r1
     860:	0c f4       	brge	.+2      	; 0x864 <main+0x13c>
     862:	ff c0       	rjmp	.+510    	; 0xa62 <main+0x33a>
     864:	8b 81       	ldd	r24, Y+3	; 0x03
     866:	9c 81       	ldd	r25, Y+4	; 0x04
     868:	8e 30       	cpi	r24, 0x0E	; 14
     86a:	91 05       	cpc	r25, r1
     86c:	09 f4       	brne	.+2      	; 0x870 <main+0x148>
     86e:	0d c1       	rjmp	.+538    	; 0xa8a <main+0x362>
     870:	9d cf       	rjmp	.-198    	; 0x7ac <main+0x84>
		{
        case 0:
            if(!(PINA & (1<<home_switch)))
     872:	e0 e2       	ldi	r30, 0x20	; 32
     874:	f0 e0       	ldi	r31, 0x00	; 0
     876:	80 81       	ld	r24, Z
     878:	88 2f       	mov	r24, r24
     87a:	90 e0       	ldi	r25, 0x00	; 0
     87c:	81 70       	andi	r24, 0x01	; 1
     87e:	90 70       	andi	r25, 0x00	; 0
     880:	00 97       	sbiw	r24, 0x00	; 0
     882:	29 f4       	brne	.+10     	; 0x88e <main+0x166>
            {
                status = 2;
     884:	82 e0       	ldi	r24, 0x02	; 2
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	9a 83       	std	Y+2, r25	; 0x02
     88a:	89 83       	std	Y+1, r24	; 0x01
     88c:	8f cf       	rjmp	.-226    	; 0x7ac <main+0x84>
                break;
            }
            if (PINA &(1<<home_switch))
     88e:	e0 e2       	ldi	r30, 0x20	; 32
     890:	f0 e0       	ldi	r31, 0x00	; 0
     892:	80 81       	ld	r24, Z
     894:	88 2f       	mov	r24, r24
     896:	90 e0       	ldi	r25, 0x00	; 0
     898:	81 70       	andi	r24, 0x01	; 1
     89a:	90 70       	andi	r25, 0x00	; 0
     89c:	88 23       	and	r24, r24
     89e:	09 f4       	brne	.+2      	; 0x8a2 <main+0x17a>
     8a0:	85 cf       	rjmp	.-246    	; 0x7ac <main+0x84>
            {
                if(!(PINA & (1<<home_knop)))
     8a2:	e0 e2       	ldi	r30, 0x20	; 32
     8a4:	f0 e0       	ldi	r31, 0x00	; 0
     8a6:	80 81       	ld	r24, Z
     8a8:	88 2f       	mov	r24, r24
     8aa:	90 e0       	ldi	r25, 0x00	; 0
     8ac:	84 70       	andi	r24, 0x04	; 4
     8ae:	90 70       	andi	r25, 0x00	; 0
     8b0:	00 97       	sbiw	r24, 0x00	; 0
     8b2:	09 f0       	breq	.+2      	; 0x8b6 <main+0x18e>
     8b4:	7b cf       	rjmp	.-266    	; 0x7ac <main+0x84>
                {
                    status = 1;
     8b6:	81 e0       	ldi	r24, 0x01	; 1
     8b8:	90 e0       	ldi	r25, 0x00	; 0
     8ba:	9a 83       	std	Y+2, r25	; 0x02
     8bc:	89 83       	std	Y+1, r24	; 0x01
     8be:	76 cf       	rjmp	.-276    	; 0x7ac <main+0x84>
                    break;
                }
            }
            break;
        case 1:
            if(!(PINA & (1<<home_switch)))
     8c0:	e0 e2       	ldi	r30, 0x20	; 32
     8c2:	f0 e0       	ldi	r31, 0x00	; 0
     8c4:	80 81       	ld	r24, Z
     8c6:	88 2f       	mov	r24, r24
     8c8:	90 e0       	ldi	r25, 0x00	; 0
     8ca:	81 70       	andi	r24, 0x01	; 1
     8cc:	90 70       	andi	r25, 0x00	; 0
     8ce:	00 97       	sbiw	r24, 0x00	; 0
     8d0:	19 f4       	brne	.+6      	; 0x8d8 <main+0x1b0>
            {
                status = 0;
     8d2:	1a 82       	std	Y+2, r1	; 0x02
     8d4:	19 82       	std	Y+1, r1	; 0x01
     8d6:	6a cf       	rjmp	.-300    	; 0x7ac <main+0x84>
                break;
            }
            h_bridge_set_percentage(-70);
     8d8:	8a eb       	ldi	r24, 0xBA	; 186
     8da:	0e 94 75 02 	call	0x4ea	; 0x4ea <h_bridge_set_percentage>
     8de:	66 cf       	rjmp	.-308    	; 0x7ac <main+0x84>
            break;
        case 2:
            if(!(PINA & (1<<opbouw_knop)))
     8e0:	e0 e2       	ldi	r30, 0x20	; 32
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	80 81       	ld	r24, Z
     8e6:	88 2f       	mov	r24, r24
     8e8:	90 e0       	ldi	r25, 0x00	; 0
     8ea:	88 70       	andi	r24, 0x08	; 8
     8ec:	90 70       	andi	r25, 0x00	; 0
     8ee:	00 97       	sbiw	r24, 0x00	; 0
     8f0:	29 f4       	brne	.+10     	; 0x8fc <main+0x1d4>
            {
                status = 3;
     8f2:	83 e0       	ldi	r24, 0x03	; 3
     8f4:	90 e0       	ldi	r25, 0x00	; 0
     8f6:	9a 83       	std	Y+2, r25	; 0x02
     8f8:	89 83       	std	Y+1, r24	; 0x01
     8fa:	58 cf       	rjmp	.-336    	; 0x7ac <main+0x84>
                break;
            }
            if(!(PINA & (1<<afbouw_knop)))
     8fc:	e0 e2       	ldi	r30, 0x20	; 32
     8fe:	f0 e0       	ldi	r31, 0x00	; 0
     900:	80 81       	ld	r24, Z
     902:	88 2f       	mov	r24, r24
     904:	90 e0       	ldi	r25, 0x00	; 0
     906:	80 71       	andi	r24, 0x10	; 16
     908:	90 70       	andi	r25, 0x00	; 0
     90a:	00 97       	sbiw	r24, 0x00	; 0
     90c:	09 f0       	breq	.+2      	; 0x910 <main+0x1e8>
     90e:	4e cf       	rjmp	.-356    	; 0x7ac <main+0x84>
            {
                status = 4;
     910:	84 e0       	ldi	r24, 0x04	; 4
     912:	90 e0       	ldi	r25, 0x00	; 0
     914:	9a 83       	std	Y+2, r25	; 0x02
     916:	89 83       	std	Y+1, r24	; 0x01
     918:	49 cf       	rjmp	.-366    	; 0x7ac <main+0x84>
            }
            break;

            //Opbouwen
        case 3:
            servo1_set_percentage(50);
     91a:	82 e3       	ldi	r24, 0x32	; 50
     91c:	0e 94 01 06 	call	0xc02	; 0xc02 <servo1_set_percentage>
            servo2_set_percentage(50);
     920:	82 e3       	ldi	r24, 0x32	; 50
     922:	0e 94 40 06 	call	0xc80	; 0xc80 <servo2_set_percentage>
            status = 5;
     926:	85 e0       	ldi	r24, 0x05	; 5
     928:	90 e0       	ldi	r25, 0x00	; 0
     92a:	9a 83       	std	Y+2, r25	; 0x02
     92c:	89 83       	std	Y+1, r24	; 0x01
     92e:	3e cf       	rjmp	.-388    	; 0x7ac <main+0x84>
            break;
        case 5:
            if (!(PINA & (1<<top_switch)))
     930:	e0 e2       	ldi	r30, 0x20	; 32
     932:	f0 e0       	ldi	r31, 0x00	; 0
     934:	80 81       	ld	r24, Z
     936:	88 2f       	mov	r24, r24
     938:	90 e0       	ldi	r25, 0x00	; 0
     93a:	82 70       	andi	r24, 0x02	; 2
     93c:	90 70       	andi	r25, 0x00	; 0
     93e:	00 97       	sbiw	r24, 0x00	; 0
     940:	41 f4       	brne	.+16     	; 0x952 <main+0x22a>
            {
                h_bridge_set_percentage(0);
     942:	80 e0       	ldi	r24, 0x00	; 0
     944:	0e 94 75 02 	call	0x4ea	; 0x4ea <h_bridge_set_percentage>
                status = 7;
     948:	87 e0       	ldi	r24, 0x07	; 7
     94a:	90 e0       	ldi	r25, 0x00	; 0
     94c:	9a 83       	std	Y+2, r25	; 0x02
     94e:	89 83       	std	Y+1, r24	; 0x01
     950:	2d cf       	rjmp	.-422    	; 0x7ac <main+0x84>
                break;
            }
            h_bridge_set_percentage(70);
     952:	86 e4       	ldi	r24, 0x46	; 70
     954:	0e 94 75 02 	call	0x4ea	; 0x4ea <h_bridge_set_percentage>
     958:	29 cf       	rjmp	.-430    	; 0x7ac <main+0x84>
            break;
        case 7:
            if(!(PINA & (1<<volgende_steiger)))
     95a:	e0 e2       	ldi	r30, 0x20	; 32
     95c:	f0 e0       	ldi	r31, 0x00	; 0
     95e:	80 81       	ld	r24, Z
     960:	88 2f       	mov	r24, r24
     962:	90 e0       	ldi	r25, 0x00	; 0
     964:	80 74       	andi	r24, 0x40	; 64
     966:	90 70       	andi	r25, 0x00	; 0
     968:	00 97       	sbiw	r24, 0x00	; 0
     96a:	09 f0       	breq	.+2      	; 0x96e <main+0x246>
     96c:	1f cf       	rjmp	.-450    	; 0x7ac <main+0x84>
            {
                status = 9;
     96e:	89 e0       	ldi	r24, 0x09	; 9
     970:	90 e0       	ldi	r25, 0x00	; 0
     972:	9a 83       	std	Y+2, r25	; 0x02
     974:	89 83       	std	Y+1, r24	; 0x01
     976:	1a cf       	rjmp	.-460    	; 0x7ac <main+0x84>
            }
            break;
        case 9:
            if(!(PINA & (1<<middel_switch)))
     978:	e0 e2       	ldi	r30, 0x20	; 32
     97a:	f0 e0       	ldi	r31, 0x00	; 0
     97c:	80 81       	ld	r24, Z
     97e:	88 2f       	mov	r24, r24
     980:	90 e0       	ldi	r25, 0x00	; 0
     982:	80 72       	andi	r24, 0x20	; 32
     984:	90 70       	andi	r25, 0x00	; 0
     986:	00 97       	sbiw	r24, 0x00	; 0
     988:	41 f4       	brne	.+16     	; 0x99a <main+0x272>
               {
                   h_bridge_set_percentage(0);
     98a:	80 e0       	ldi	r24, 0x00	; 0
     98c:	0e 94 75 02 	call	0x4ea	; 0x4ea <h_bridge_set_percentage>
                   status = 11;
     990:	8b e0       	ldi	r24, 0x0B	; 11
     992:	90 e0       	ldi	r25, 0x00	; 0
     994:	9a 83       	std	Y+2, r25	; 0x02
     996:	89 83       	std	Y+1, r24	; 0x01
     998:	09 cf       	rjmp	.-494    	; 0x7ac <main+0x84>
                   break;
               }
               h_bridge_set_percentage(-70);
     99a:	8a eb       	ldi	r24, 0xBA	; 186
     99c:	0e 94 75 02 	call	0x4ea	; 0x4ea <h_bridge_set_percentage>
     9a0:	05 cf       	rjmp	.-502    	; 0x7ac <main+0x84>
               break;
        case 11:
            servo1_set_percentage(-50);
     9a2:	8e ec       	ldi	r24, 0xCE	; 206
     9a4:	0e 94 01 06 	call	0xc02	; 0xc02 <servo1_set_percentage>
            servo2_set_percentage(-50);
     9a8:	8e ec       	ldi	r24, 0xCE	; 206
     9aa:	0e 94 40 06 	call	0xc80	; 0xc80 <servo2_set_percentage>
            status = 13;
     9ae:	8d e0       	ldi	r24, 0x0D	; 13
     9b0:	90 e0       	ldi	r25, 0x00	; 0
     9b2:	9a 83       	std	Y+2, r25	; 0x02
     9b4:	89 83       	std	Y+1, r24	; 0x01
     9b6:	fa ce       	rjmp	.-524    	; 0x7ac <main+0x84>
            break;
        case 13:
            if (!(PINA & (1<<home_switch)))
     9b8:	e0 e2       	ldi	r30, 0x20	; 32
     9ba:	f0 e0       	ldi	r31, 0x00	; 0
     9bc:	80 81       	ld	r24, Z
     9be:	88 2f       	mov	r24, r24
     9c0:	90 e0       	ldi	r25, 0x00	; 0
     9c2:	81 70       	andi	r24, 0x01	; 1
     9c4:	90 70       	andi	r25, 0x00	; 0
     9c6:	00 97       	sbiw	r24, 0x00	; 0
     9c8:	41 f4       	brne	.+16     	; 0x9da <main+0x2b2>
            {
                h_bridge_set_percentage(0);
     9ca:	80 e0       	ldi	r24, 0x00	; 0
     9cc:	0e 94 75 02 	call	0x4ea	; 0x4ea <h_bridge_set_percentage>
                status = 2;
     9d0:	82 e0       	ldi	r24, 0x02	; 2
     9d2:	90 e0       	ldi	r25, 0x00	; 0
     9d4:	9a 83       	std	Y+2, r25	; 0x02
     9d6:	89 83       	std	Y+1, r24	; 0x01
     9d8:	e9 ce       	rjmp	.-558    	; 0x7ac <main+0x84>
                break;
            }
            h_bridge_set_percentage(-70);
     9da:	8a eb       	ldi	r24, 0xBA	; 186
     9dc:	0e 94 75 02 	call	0x4ea	; 0x4ea <h_bridge_set_percentage>
     9e0:	e5 ce       	rjmp	.-566    	; 0x7ac <main+0x84>
            break;
        case 4:
            if (!(PINA &(1<<middel_switch)))
     9e2:	e0 e2       	ldi	r30, 0x20	; 32
     9e4:	f0 e0       	ldi	r31, 0x00	; 0
     9e6:	80 81       	ld	r24, Z
     9e8:	88 2f       	mov	r24, r24
     9ea:	90 e0       	ldi	r25, 0x00	; 0
     9ec:	80 72       	andi	r24, 0x20	; 32
     9ee:	90 70       	andi	r25, 0x00	; 0
     9f0:	00 97       	sbiw	r24, 0x00	; 0
     9f2:	41 f4       	brne	.+16     	; 0xa04 <main+0x2dc>
            {
                h_bridge_set_percentage(0);
     9f4:	80 e0       	ldi	r24, 0x00	; 0
     9f6:	0e 94 75 02 	call	0x4ea	; 0x4ea <h_bridge_set_percentage>
                status = 6;
     9fa:	86 e0       	ldi	r24, 0x06	; 6
     9fc:	90 e0       	ldi	r25, 0x00	; 0
     9fe:	9a 83       	std	Y+2, r25	; 0x02
     a00:	89 83       	std	Y+1, r24	; 0x01
     a02:	d4 ce       	rjmp	.-600    	; 0x7ac <main+0x84>
                break;
            }
            h_bridge_set_percentage(70);
     a04:	86 e4       	ldi	r24, 0x46	; 70
     a06:	0e 94 75 02 	call	0x4ea	; 0x4ea <h_bridge_set_percentage>
     a0a:	d0 ce       	rjmp	.-608    	; 0x7ac <main+0x84>
            break;
        case 6:
            servo1_set_percentage(50);
     a0c:	82 e3       	ldi	r24, 0x32	; 50
     a0e:	0e 94 01 06 	call	0xc02	; 0xc02 <servo1_set_percentage>
            servo2_set_percentage(50);
     a12:	82 e3       	ldi	r24, 0x32	; 50
     a14:	0e 94 40 06 	call	0xc80	; 0xc80 <servo2_set_percentage>
            status = 8;
     a18:	88 e0       	ldi	r24, 0x08	; 8
     a1a:	90 e0       	ldi	r25, 0x00	; 0
     a1c:	9a 83       	std	Y+2, r25	; 0x02
     a1e:	89 83       	std	Y+1, r24	; 0x01
     a20:	c5 ce       	rjmp	.-630    	; 0x7ac <main+0x84>
            break;
        case 8:
            if(!(PINA & (1<<top_switch)))
     a22:	e0 e2       	ldi	r30, 0x20	; 32
     a24:	f0 e0       	ldi	r31, 0x00	; 0
     a26:	80 81       	ld	r24, Z
     a28:	88 2f       	mov	r24, r24
     a2a:	90 e0       	ldi	r25, 0x00	; 0
     a2c:	82 70       	andi	r24, 0x02	; 2
     a2e:	90 70       	andi	r25, 0x00	; 0
     a30:	00 97       	sbiw	r24, 0x00	; 0
     a32:	41 f4       	brne	.+16     	; 0xa44 <main+0x31c>
            {
                h_bridge_set_percentage(0);
     a34:	80 e0       	ldi	r24, 0x00	; 0
     a36:	0e 94 75 02 	call	0x4ea	; 0x4ea <h_bridge_set_percentage>
                status = 10;
     a3a:	8a e0       	ldi	r24, 0x0A	; 10
     a3c:	90 e0       	ldi	r25, 0x00	; 0
     a3e:	9a 83       	std	Y+2, r25	; 0x02
     a40:	89 83       	std	Y+1, r24	; 0x01
     a42:	b4 ce       	rjmp	.-664    	; 0x7ac <main+0x84>
                break;
            }
            h_bridge_set_percentage(70);
     a44:	86 e4       	ldi	r24, 0x46	; 70
     a46:	0e 94 75 02 	call	0x4ea	; 0x4ea <h_bridge_set_percentage>
     a4a:	b0 ce       	rjmp	.-672    	; 0x7ac <main+0x84>
            break;
        case 10:
            if(!(PINA &(1<<vorige_steiger)))
     a4c:	e0 e2       	ldi	r30, 0x20	; 32
     a4e:	f0 e0       	ldi	r31, 0x00	; 0
     a50:	80 81       	ld	r24, Z
     a52:	88 23       	and	r24, r24
     a54:	0c f4       	brge	.+2      	; 0xa58 <main+0x330>
     a56:	aa ce       	rjmp	.-684    	; 0x7ac <main+0x84>
            {
                status = 12;
     a58:	8c e0       	ldi	r24, 0x0C	; 12
     a5a:	90 e0       	ldi	r25, 0x00	; 0
     a5c:	9a 83       	std	Y+2, r25	; 0x02
     a5e:	89 83       	std	Y+1, r24	; 0x01
     a60:	a5 ce       	rjmp	.-694    	; 0x7ac <main+0x84>
            }
            break;
        case 12:
            if(!(PINA & (1<<home_switch)))
     a62:	e0 e2       	ldi	r30, 0x20	; 32
     a64:	f0 e0       	ldi	r31, 0x00	; 0
     a66:	80 81       	ld	r24, Z
     a68:	88 2f       	mov	r24, r24
     a6a:	90 e0       	ldi	r25, 0x00	; 0
     a6c:	81 70       	andi	r24, 0x01	; 1
     a6e:	90 70       	andi	r25, 0x00	; 0
     a70:	00 97       	sbiw	r24, 0x00	; 0
     a72:	41 f4       	brne	.+16     	; 0xa84 <main+0x35c>
            {
                h_bridge_set_percentage(0);
     a74:	80 e0       	ldi	r24, 0x00	; 0
     a76:	0e 94 75 02 	call	0x4ea	; 0x4ea <h_bridge_set_percentage>
                status = 14;
     a7a:	8e e0       	ldi	r24, 0x0E	; 14
     a7c:	90 e0       	ldi	r25, 0x00	; 0
     a7e:	9a 83       	std	Y+2, r25	; 0x02
     a80:	89 83       	std	Y+1, r24	; 0x01
     a82:	94 ce       	rjmp	.-728    	; 0x7ac <main+0x84>
                break;
            }
            h_bridge_set_percentage(-70);
     a84:	8a eb       	ldi	r24, 0xBA	; 186
     a86:	0e 94 75 02 	call	0x4ea	; 0x4ea <h_bridge_set_percentage>
        case 14:
            servo1_set_percentage(-50);
     a8a:	8e ec       	ldi	r24, 0xCE	; 206
     a8c:	0e 94 01 06 	call	0xc02	; 0xc02 <servo1_set_percentage>
            servo2_set_percentage(-50);
     a90:	8e ec       	ldi	r24, 0xCE	; 206
     a92:	0e 94 40 06 	call	0xc80	; 0xc80 <servo2_set_percentage>
            status = 2;
     a96:	82 e0       	ldi	r24, 0x02	; 2
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	9a 83       	std	Y+2, r25	; 0x02
     a9c:	89 83       	std	Y+1, r24	; 0x01
     a9e:	86 ce       	rjmp	.-756    	; 0x7ac <main+0x84>

00000aa0 <__vector_20>:
#define RESET_VALUE	(65636ul-TIME_VALUE)
#define STOP_VALUE	(TIME_VALUE*0.075)
#define RANGE		(TIME_VALUE*0.025)

ISR(TIMER1_OVF_vect)
{
     aa0:	1f 92       	push	r1
     aa2:	0f 92       	push	r0
     aa4:	0f b6       	in	r0, 0x3f	; 63
     aa6:	0f 92       	push	r0
     aa8:	00 90 5b 00 	lds	r0, 0x005B
     aac:	0f 92       	push	r0
     aae:	11 24       	eor	r1, r1
     ab0:	8f 93       	push	r24
     ab2:	9f 93       	push	r25
     ab4:	af 93       	push	r26
     ab6:	bf 93       	push	r27
     ab8:	ef 93       	push	r30
     aba:	ff 93       	push	r31
     abc:	df 93       	push	r29
     abe:	cf 93       	push	r28
     ac0:	cd b7       	in	r28, 0x3d	; 61
     ac2:	de b7       	in	r29, 0x3e	; 62
	TCNT1 = RESET_VALUE;
     ac4:	e4 e8       	ldi	r30, 0x84	; 132
     ac6:	f0 e0       	ldi	r31, 0x00	; 0
     ac8:	84 e2       	ldi	r24, 0x24	; 36
     aca:	94 e6       	ldi	r25, 0x64	; 100
     acc:	91 83       	std	Z+1, r25	; 0x01
     ace:	80 83       	st	Z, r24

	PORT_1 |= (1<<PIN_1);
     ad0:	ae e2       	ldi	r26, 0x2E	; 46
     ad2:	b0 e0       	ldi	r27, 0x00	; 0
     ad4:	ee e2       	ldi	r30, 0x2E	; 46
     ad6:	f0 e0       	ldi	r31, 0x00	; 0
     ad8:	80 81       	ld	r24, Z
     ada:	88 60       	ori	r24, 0x08	; 8
     adc:	8c 93       	st	X, r24
	PORT_2 |= (1<<PIN_2);
     ade:	a2 e0       	ldi	r26, 0x02	; 2
     ae0:	b1 e0       	ldi	r27, 0x01	; 1
     ae2:	e2 e0       	ldi	r30, 0x02	; 2
     ae4:	f1 e0       	ldi	r31, 0x01	; 1
     ae6:	80 81       	ld	r24, Z
     ae8:	88 60       	ori	r24, 0x08	; 8
     aea:	8c 93       	st	X, r24
}
     aec:	cf 91       	pop	r28
     aee:	df 91       	pop	r29
     af0:	ff 91       	pop	r31
     af2:	ef 91       	pop	r30
     af4:	bf 91       	pop	r27
     af6:	af 91       	pop	r26
     af8:	9f 91       	pop	r25
     afa:	8f 91       	pop	r24
     afc:	0f 90       	pop	r0
     afe:	00 92 5b 00 	sts	0x005B, r0
     b02:	0f 90       	pop	r0
     b04:	0f be       	out	0x3f, r0	; 63
     b06:	0f 90       	pop	r0
     b08:	1f 90       	pop	r1
     b0a:	18 95       	reti

00000b0c <__vector_17>:

ISR(TIMER1_COMPA_vect)
{
     b0c:	1f 92       	push	r1
     b0e:	0f 92       	push	r0
     b10:	0f b6       	in	r0, 0x3f	; 63
     b12:	0f 92       	push	r0
     b14:	00 90 5b 00 	lds	r0, 0x005B
     b18:	0f 92       	push	r0
     b1a:	11 24       	eor	r1, r1
     b1c:	8f 93       	push	r24
     b1e:	af 93       	push	r26
     b20:	bf 93       	push	r27
     b22:	ef 93       	push	r30
     b24:	ff 93       	push	r31
     b26:	df 93       	push	r29
     b28:	cf 93       	push	r28
     b2a:	cd b7       	in	r28, 0x3d	; 61
     b2c:	de b7       	in	r29, 0x3e	; 62
	PORT_1 &= ~(1<<PIN_1);
     b2e:	ae e2       	ldi	r26, 0x2E	; 46
     b30:	b0 e0       	ldi	r27, 0x00	; 0
     b32:	ee e2       	ldi	r30, 0x2E	; 46
     b34:	f0 e0       	ldi	r31, 0x00	; 0
     b36:	80 81       	ld	r24, Z
     b38:	87 7f       	andi	r24, 0xF7	; 247
     b3a:	8c 93       	st	X, r24
}
     b3c:	cf 91       	pop	r28
     b3e:	df 91       	pop	r29
     b40:	ff 91       	pop	r31
     b42:	ef 91       	pop	r30
     b44:	bf 91       	pop	r27
     b46:	af 91       	pop	r26
     b48:	8f 91       	pop	r24
     b4a:	0f 90       	pop	r0
     b4c:	00 92 5b 00 	sts	0x005B, r0
     b50:	0f 90       	pop	r0
     b52:	0f be       	out	0x3f, r0	; 63
     b54:	0f 90       	pop	r0
     b56:	1f 90       	pop	r1
     b58:	18 95       	reti

00000b5a <__vector_18>:

ISR(TIMER1_COMPB_vect)
{
     b5a:	1f 92       	push	r1
     b5c:	0f 92       	push	r0
     b5e:	0f b6       	in	r0, 0x3f	; 63
     b60:	0f 92       	push	r0
     b62:	00 90 5b 00 	lds	r0, 0x005B
     b66:	0f 92       	push	r0
     b68:	11 24       	eor	r1, r1
     b6a:	8f 93       	push	r24
     b6c:	af 93       	push	r26
     b6e:	bf 93       	push	r27
     b70:	ef 93       	push	r30
     b72:	ff 93       	push	r31
     b74:	df 93       	push	r29
     b76:	cf 93       	push	r28
     b78:	cd b7       	in	r28, 0x3d	; 61
     b7a:	de b7       	in	r29, 0x3e	; 62
	PORT_2 &= ~(1<<PIN_2);
     b7c:	a2 e0       	ldi	r26, 0x02	; 2
     b7e:	b1 e0       	ldi	r27, 0x01	; 1
     b80:	e2 e0       	ldi	r30, 0x02	; 2
     b82:	f1 e0       	ldi	r31, 0x01	; 1
     b84:	80 81       	ld	r24, Z
     b86:	87 7f       	andi	r24, 0xF7	; 247
     b88:	8c 93       	st	X, r24
}
     b8a:	cf 91       	pop	r28
     b8c:	df 91       	pop	r29
     b8e:	ff 91       	pop	r31
     b90:	ef 91       	pop	r30
     b92:	bf 91       	pop	r27
     b94:	af 91       	pop	r26
     b96:	8f 91       	pop	r24
     b98:	0f 90       	pop	r0
     b9a:	00 92 5b 00 	sts	0x005B, r0
     b9e:	0f 90       	pop	r0
     ba0:	0f be       	out	0x3f, r0	; 63
     ba2:	0f 90       	pop	r0
     ba4:	1f 90       	pop	r1
     ba6:	18 95       	reti

00000ba8 <init_servo>:

void init_servo(void)
{
     ba8:	df 93       	push	r29
     baa:	cf 93       	push	r28
     bac:	cd b7       	in	r28, 0x3d	; 61
     bae:	de b7       	in	r29, 0x3e	; 62
	// Config pins as output
	DDR_1 |= (1<<PIN_1);
     bb0:	ad e2       	ldi	r26, 0x2D	; 45
     bb2:	b0 e0       	ldi	r27, 0x00	; 0
     bb4:	ed e2       	ldi	r30, 0x2D	; 45
     bb6:	f0 e0       	ldi	r31, 0x00	; 0
     bb8:	80 81       	ld	r24, Z
     bba:	88 60       	ori	r24, 0x08	; 8
     bbc:	8c 93       	st	X, r24
	DDR_2 |= (1<<PIN_2);
     bbe:	a1 e0       	ldi	r26, 0x01	; 1
     bc0:	b1 e0       	ldi	r27, 0x01	; 1
     bc2:	e1 e0       	ldi	r30, 0x01	; 1
     bc4:	f1 e0       	ldi	r31, 0x01	; 1
     bc6:	80 81       	ld	r24, Z
     bc8:	88 60       	ori	r24, 0x08	; 8
     bca:	8c 93       	st	X, r24

	// Use mode 0, clkdiv = 8
	TCCR1A = 0;
     bcc:	e0 e8       	ldi	r30, 0x80	; 128
     bce:	f0 e0       	ldi	r31, 0x00	; 0
     bd0:	10 82       	st	Z, r1
	TCCR1B = (0<<CS12) | (1<<CS11) | (0<<CS10);
     bd2:	e1 e8       	ldi	r30, 0x81	; 129
     bd4:	f0 e0       	ldi	r31, 0x00	; 0
     bd6:	82 e0       	ldi	r24, 0x02	; 2
     bd8:	80 83       	st	Z, r24
	// Interrupts on OCA, OCB and OVF
	TIMSK1 = (1<<OCIE1B) | (1<<OCIE1A) | (1<<TOIE1);
     bda:	ef e6       	ldi	r30, 0x6F	; 111
     bdc:	f0 e0       	ldi	r31, 0x00	; 0
     bde:	87 e0       	ldi	r24, 0x07	; 7
     be0:	80 83       	st	Z, r24

	TCNT1 = RESET_VALUE;
     be2:	e4 e8       	ldi	r30, 0x84	; 132
     be4:	f0 e0       	ldi	r31, 0x00	; 0
     be6:	84 e2       	ldi	r24, 0x24	; 36
     be8:	94 e6       	ldi	r25, 0x64	; 100
     bea:	91 83       	std	Z+1, r25	; 0x01
     bec:	80 83       	st	Z, r24

	servo1_set_percentage(0);
     bee:	80 e0       	ldi	r24, 0x00	; 0
     bf0:	0e 94 01 06 	call	0xc02	; 0xc02 <servo1_set_percentage>
	servo2_set_percentage(0);
     bf4:	80 e0       	ldi	r24, 0x00	; 0
     bf6:	0e 94 40 06 	call	0xc80	; 0xc80 <servo2_set_percentage>

	sei();
     bfa:	78 94       	sei
}
     bfc:	cf 91       	pop	r28
     bfe:	df 91       	pop	r29
     c00:	08 95       	ret

00000c02 <servo1_set_percentage>:

void servo1_set_percentage(signed char percentage)
{
     c02:	0f 93       	push	r16
     c04:	1f 93       	push	r17
     c06:	df 93       	push	r29
     c08:	cf 93       	push	r28
     c0a:	0f 92       	push	r0
     c0c:	cd b7       	in	r28, 0x3d	; 61
     c0e:	de b7       	in	r29, 0x3e	; 62
     c10:	89 83       	std	Y+1, r24	; 0x01
	if (percentage >= -100 && percentage <= 100)
     c12:	89 81       	ldd	r24, Y+1	; 0x01
     c14:	8c 39       	cpi	r24, 0x9C	; 156
     c16:	74 f1       	brlt	.+92     	; 0xc74 <servo1_set_percentage+0x72>
     c18:	89 81       	ldd	r24, Y+1	; 0x01
     c1a:	85 36       	cpi	r24, 0x65	; 101
     c1c:	5c f5       	brge	.+86     	; 0xc74 <servo1_set_percentage+0x72>
	{
		OCR1A = RESET_VALUE+STOP_VALUE+(RANGE/100*percentage);
     c1e:	08 e8       	ldi	r16, 0x88	; 136
     c20:	10 e0       	ldi	r17, 0x00	; 0
     c22:	89 81       	ldd	r24, Y+1	; 0x01
     c24:	99 27       	eor	r25, r25
     c26:	87 fd       	sbrc	r24, 7
     c28:	90 95       	com	r25
     c2a:	a9 2f       	mov	r26, r25
     c2c:	b9 2f       	mov	r27, r25
     c2e:	bc 01       	movw	r22, r24
     c30:	cd 01       	movw	r24, r26
     c32:	0e 94 7f 09 	call	0x12fe	; 0x12fe <__floatsisf>
     c36:	dc 01       	movw	r26, r24
     c38:	cb 01       	movw	r24, r22
     c3a:	bc 01       	movw	r22, r24
     c3c:	cd 01       	movw	r24, r26
     c3e:	20 e0       	ldi	r18, 0x00	; 0
     c40:	30 e0       	ldi	r19, 0x00	; 0
     c42:	40 e2       	ldi	r20, 0x20	; 32
     c44:	51 e4       	ldi	r21, 0x41	; 65
     c46:	0e 94 55 08 	call	0x10aa	; 0x10aa <__mulsf3>
     c4a:	dc 01       	movw	r26, r24
     c4c:	cb 01       	movw	r24, r22
     c4e:	bc 01       	movw	r22, r24
     c50:	cd 01       	movw	r24, r26
     c52:	20 e0       	ldi	r18, 0x00	; 0
     c54:	38 eb       	ldi	r19, 0xB8	; 184
     c56:	4f ed       	ldi	r20, 0xDF	; 223
     c58:	56 e4       	ldi	r21, 0x46	; 70
     c5a:	0e 94 28 08 	call	0x1050	; 0x1050 <__addsf3>
     c5e:	dc 01       	movw	r26, r24
     c60:	cb 01       	movw	r24, r22
     c62:	bc 01       	movw	r22, r24
     c64:	cd 01       	movw	r24, r26
     c66:	0e 94 7f 06 	call	0xcfe	; 0xcfe <__fixunssfsi>
     c6a:	dc 01       	movw	r26, r24
     c6c:	cb 01       	movw	r24, r22
     c6e:	f8 01       	movw	r30, r16
     c70:	91 83       	std	Z+1, r25	; 0x01
     c72:	80 83       	st	Z, r24
	}
}
     c74:	0f 90       	pop	r0
     c76:	cf 91       	pop	r28
     c78:	df 91       	pop	r29
     c7a:	1f 91       	pop	r17
     c7c:	0f 91       	pop	r16
     c7e:	08 95       	ret

00000c80 <servo2_set_percentage>:

void servo2_set_percentage(signed char percentage)
{
     c80:	0f 93       	push	r16
     c82:	1f 93       	push	r17
     c84:	df 93       	push	r29
     c86:	cf 93       	push	r28
     c88:	0f 92       	push	r0
     c8a:	cd b7       	in	r28, 0x3d	; 61
     c8c:	de b7       	in	r29, 0x3e	; 62
     c8e:	89 83       	std	Y+1, r24	; 0x01
	if (percentage >= -100 && percentage <= 100)
     c90:	89 81       	ldd	r24, Y+1	; 0x01
     c92:	8c 39       	cpi	r24, 0x9C	; 156
     c94:	74 f1       	brlt	.+92     	; 0xcf2 <servo2_set_percentage+0x72>
     c96:	89 81       	ldd	r24, Y+1	; 0x01
     c98:	85 36       	cpi	r24, 0x65	; 101
     c9a:	5c f5       	brge	.+86     	; 0xcf2 <servo2_set_percentage+0x72>
	{
		OCR1B = RESET_VALUE+STOP_VALUE+(RANGE/100*percentage);
     c9c:	0a e8       	ldi	r16, 0x8A	; 138
     c9e:	10 e0       	ldi	r17, 0x00	; 0
     ca0:	89 81       	ldd	r24, Y+1	; 0x01
     ca2:	99 27       	eor	r25, r25
     ca4:	87 fd       	sbrc	r24, 7
     ca6:	90 95       	com	r25
     ca8:	a9 2f       	mov	r26, r25
     caa:	b9 2f       	mov	r27, r25
     cac:	bc 01       	movw	r22, r24
     cae:	cd 01       	movw	r24, r26
     cb0:	0e 94 7f 09 	call	0x12fe	; 0x12fe <__floatsisf>
     cb4:	dc 01       	movw	r26, r24
     cb6:	cb 01       	movw	r24, r22
     cb8:	bc 01       	movw	r22, r24
     cba:	cd 01       	movw	r24, r26
     cbc:	20 e0       	ldi	r18, 0x00	; 0
     cbe:	30 e0       	ldi	r19, 0x00	; 0
     cc0:	40 e2       	ldi	r20, 0x20	; 32
     cc2:	51 e4       	ldi	r21, 0x41	; 65
     cc4:	0e 94 55 08 	call	0x10aa	; 0x10aa <__mulsf3>
     cc8:	dc 01       	movw	r26, r24
     cca:	cb 01       	movw	r24, r22
     ccc:	bc 01       	movw	r22, r24
     cce:	cd 01       	movw	r24, r26
     cd0:	20 e0       	ldi	r18, 0x00	; 0
     cd2:	38 eb       	ldi	r19, 0xB8	; 184
     cd4:	4f ed       	ldi	r20, 0xDF	; 223
     cd6:	56 e4       	ldi	r21, 0x46	; 70
     cd8:	0e 94 28 08 	call	0x1050	; 0x1050 <__addsf3>
     cdc:	dc 01       	movw	r26, r24
     cde:	cb 01       	movw	r24, r22
     ce0:	bc 01       	movw	r22, r24
     ce2:	cd 01       	movw	r24, r26
     ce4:	0e 94 7f 06 	call	0xcfe	; 0xcfe <__fixunssfsi>
     ce8:	dc 01       	movw	r26, r24
     cea:	cb 01       	movw	r24, r22
     cec:	f8 01       	movw	r30, r16
     cee:	91 83       	std	Z+1, r25	; 0x01
     cf0:	80 83       	st	Z, r24
	}
}
     cf2:	0f 90       	pop	r0
     cf4:	cf 91       	pop	r28
     cf6:	df 91       	pop	r29
     cf8:	1f 91       	pop	r17
     cfa:	0f 91       	pop	r16
     cfc:	08 95       	ret

00000cfe <__fixunssfsi>:
     cfe:	ef 92       	push	r14
     d00:	ff 92       	push	r15
     d02:	0f 93       	push	r16
     d04:	1f 93       	push	r17
     d06:	7b 01       	movw	r14, r22
     d08:	8c 01       	movw	r16, r24
     d0a:	20 e0       	ldi	r18, 0x00	; 0
     d0c:	30 e0       	ldi	r19, 0x00	; 0
     d0e:	40 e0       	ldi	r20, 0x00	; 0
     d10:	5f e4       	ldi	r21, 0x4F	; 79
     d12:	0e 94 4f 09 	call	0x129e	; 0x129e <__gesf2>
     d16:	88 23       	and	r24, r24
     d18:	8c f0       	brlt	.+34     	; 0xd3c <__fixunssfsi+0x3e>
     d1a:	c8 01       	movw	r24, r16
     d1c:	b7 01       	movw	r22, r14
     d1e:	20 e0       	ldi	r18, 0x00	; 0
     d20:	30 e0       	ldi	r19, 0x00	; 0
     d22:	40 e0       	ldi	r20, 0x00	; 0
     d24:	5f e4       	ldi	r21, 0x4F	; 79
     d26:	0e 94 f7 07 	call	0xfee	; 0xfee <__subsf3>
     d2a:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__fixsfsi>
     d2e:	9b 01       	movw	r18, r22
     d30:	ac 01       	movw	r20, r24
     d32:	20 50       	subi	r18, 0x00	; 0
     d34:	30 40       	sbci	r19, 0x00	; 0
     d36:	40 40       	sbci	r20, 0x00	; 0
     d38:	50 48       	sbci	r21, 0x80	; 128
     d3a:	06 c0       	rjmp	.+12     	; 0xd48 <__fixunssfsi+0x4a>
     d3c:	c8 01       	movw	r24, r16
     d3e:	b7 01       	movw	r22, r14
     d40:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__fixsfsi>
     d44:	9b 01       	movw	r18, r22
     d46:	ac 01       	movw	r20, r24
     d48:	b9 01       	movw	r22, r18
     d4a:	ca 01       	movw	r24, r20
     d4c:	1f 91       	pop	r17
     d4e:	0f 91       	pop	r16
     d50:	ff 90       	pop	r15
     d52:	ef 90       	pop	r14
     d54:	08 95       	ret

00000d56 <_fpadd_parts>:
     d56:	a0 e0       	ldi	r26, 0x00	; 0
     d58:	b0 e0       	ldi	r27, 0x00	; 0
     d5a:	e1 eb       	ldi	r30, 0xB1	; 177
     d5c:	f6 e0       	ldi	r31, 0x06	; 6
     d5e:	0c 94 a9 0c 	jmp	0x1952	; 0x1952 <__prologue_saves__>
     d62:	dc 01       	movw	r26, r24
     d64:	2b 01       	movw	r4, r22
     d66:	fa 01       	movw	r30, r20
     d68:	9c 91       	ld	r25, X
     d6a:	92 30       	cpi	r25, 0x02	; 2
     d6c:	08 f4       	brcc	.+2      	; 0xd70 <_fpadd_parts+0x1a>
     d6e:	39 c1       	rjmp	.+626    	; 0xfe2 <_fpadd_parts+0x28c>
     d70:	eb 01       	movw	r28, r22
     d72:	88 81       	ld	r24, Y
     d74:	82 30       	cpi	r24, 0x02	; 2
     d76:	08 f4       	brcc	.+2      	; 0xd7a <_fpadd_parts+0x24>
     d78:	33 c1       	rjmp	.+614    	; 0xfe0 <_fpadd_parts+0x28a>
     d7a:	94 30       	cpi	r25, 0x04	; 4
     d7c:	69 f4       	brne	.+26     	; 0xd98 <_fpadd_parts+0x42>
     d7e:	84 30       	cpi	r24, 0x04	; 4
     d80:	09 f0       	breq	.+2      	; 0xd84 <_fpadd_parts+0x2e>
     d82:	2f c1       	rjmp	.+606    	; 0xfe2 <_fpadd_parts+0x28c>
     d84:	11 96       	adiw	r26, 0x01	; 1
     d86:	9c 91       	ld	r25, X
     d88:	11 97       	sbiw	r26, 0x01	; 1
     d8a:	89 81       	ldd	r24, Y+1	; 0x01
     d8c:	98 17       	cp	r25, r24
     d8e:	09 f4       	brne	.+2      	; 0xd92 <_fpadd_parts+0x3c>
     d90:	28 c1       	rjmp	.+592    	; 0xfe2 <_fpadd_parts+0x28c>
     d92:	a0 e0       	ldi	r26, 0x00	; 0
     d94:	b2 e0       	ldi	r27, 0x02	; 2
     d96:	25 c1       	rjmp	.+586    	; 0xfe2 <_fpadd_parts+0x28c>
     d98:	84 30       	cpi	r24, 0x04	; 4
     d9a:	09 f4       	brne	.+2      	; 0xd9e <_fpadd_parts+0x48>
     d9c:	21 c1       	rjmp	.+578    	; 0xfe0 <_fpadd_parts+0x28a>
     d9e:	82 30       	cpi	r24, 0x02	; 2
     da0:	a9 f4       	brne	.+42     	; 0xdcc <_fpadd_parts+0x76>
     da2:	92 30       	cpi	r25, 0x02	; 2
     da4:	09 f0       	breq	.+2      	; 0xda8 <_fpadd_parts+0x52>
     da6:	1d c1       	rjmp	.+570    	; 0xfe2 <_fpadd_parts+0x28c>
     da8:	9a 01       	movw	r18, r20
     daa:	ad 01       	movw	r20, r26
     dac:	88 e0       	ldi	r24, 0x08	; 8
     dae:	ea 01       	movw	r28, r20
     db0:	09 90       	ld	r0, Y+
     db2:	ae 01       	movw	r20, r28
     db4:	e9 01       	movw	r28, r18
     db6:	09 92       	st	Y+, r0
     db8:	9e 01       	movw	r18, r28
     dba:	81 50       	subi	r24, 0x01	; 1
     dbc:	c1 f7       	brne	.-16     	; 0xdae <_fpadd_parts+0x58>
     dbe:	e2 01       	movw	r28, r4
     dc0:	89 81       	ldd	r24, Y+1	; 0x01
     dc2:	11 96       	adiw	r26, 0x01	; 1
     dc4:	9c 91       	ld	r25, X
     dc6:	89 23       	and	r24, r25
     dc8:	81 83       	std	Z+1, r24	; 0x01
     dca:	08 c1       	rjmp	.+528    	; 0xfdc <_fpadd_parts+0x286>
     dcc:	92 30       	cpi	r25, 0x02	; 2
     dce:	09 f4       	brne	.+2      	; 0xdd2 <_fpadd_parts+0x7c>
     dd0:	07 c1       	rjmp	.+526    	; 0xfe0 <_fpadd_parts+0x28a>
     dd2:	12 96       	adiw	r26, 0x02	; 2
     dd4:	2d 90       	ld	r2, X+
     dd6:	3c 90       	ld	r3, X
     dd8:	13 97       	sbiw	r26, 0x03	; 3
     dda:	eb 01       	movw	r28, r22
     ddc:	8a 81       	ldd	r24, Y+2	; 0x02
     dde:	9b 81       	ldd	r25, Y+3	; 0x03
     de0:	14 96       	adiw	r26, 0x04	; 4
     de2:	ad 90       	ld	r10, X+
     de4:	bd 90       	ld	r11, X+
     de6:	cd 90       	ld	r12, X+
     de8:	dc 90       	ld	r13, X
     dea:	17 97       	sbiw	r26, 0x07	; 7
     dec:	ec 80       	ldd	r14, Y+4	; 0x04
     dee:	fd 80       	ldd	r15, Y+5	; 0x05
     df0:	0e 81       	ldd	r16, Y+6	; 0x06
     df2:	1f 81       	ldd	r17, Y+7	; 0x07
     df4:	91 01       	movw	r18, r2
     df6:	28 1b       	sub	r18, r24
     df8:	39 0b       	sbc	r19, r25
     dfa:	b9 01       	movw	r22, r18
     dfc:	37 ff       	sbrs	r19, 7
     dfe:	04 c0       	rjmp	.+8      	; 0xe08 <_fpadd_parts+0xb2>
     e00:	66 27       	eor	r22, r22
     e02:	77 27       	eor	r23, r23
     e04:	62 1b       	sub	r22, r18
     e06:	73 0b       	sbc	r23, r19
     e08:	60 32       	cpi	r22, 0x20	; 32
     e0a:	71 05       	cpc	r23, r1
     e0c:	0c f0       	brlt	.+2      	; 0xe10 <_fpadd_parts+0xba>
     e0e:	61 c0       	rjmp	.+194    	; 0xed2 <_fpadd_parts+0x17c>
     e10:	12 16       	cp	r1, r18
     e12:	13 06       	cpc	r1, r19
     e14:	6c f5       	brge	.+90     	; 0xe70 <_fpadd_parts+0x11a>
     e16:	37 01       	movw	r6, r14
     e18:	48 01       	movw	r8, r16
     e1a:	06 2e       	mov	r0, r22
     e1c:	04 c0       	rjmp	.+8      	; 0xe26 <_fpadd_parts+0xd0>
     e1e:	96 94       	lsr	r9
     e20:	87 94       	ror	r8
     e22:	77 94       	ror	r7
     e24:	67 94       	ror	r6
     e26:	0a 94       	dec	r0
     e28:	d2 f7       	brpl	.-12     	; 0xe1e <_fpadd_parts+0xc8>
     e2a:	21 e0       	ldi	r18, 0x01	; 1
     e2c:	30 e0       	ldi	r19, 0x00	; 0
     e2e:	40 e0       	ldi	r20, 0x00	; 0
     e30:	50 e0       	ldi	r21, 0x00	; 0
     e32:	04 c0       	rjmp	.+8      	; 0xe3c <_fpadd_parts+0xe6>
     e34:	22 0f       	add	r18, r18
     e36:	33 1f       	adc	r19, r19
     e38:	44 1f       	adc	r20, r20
     e3a:	55 1f       	adc	r21, r21
     e3c:	6a 95       	dec	r22
     e3e:	d2 f7       	brpl	.-12     	; 0xe34 <_fpadd_parts+0xde>
     e40:	21 50       	subi	r18, 0x01	; 1
     e42:	30 40       	sbci	r19, 0x00	; 0
     e44:	40 40       	sbci	r20, 0x00	; 0
     e46:	50 40       	sbci	r21, 0x00	; 0
     e48:	2e 21       	and	r18, r14
     e4a:	3f 21       	and	r19, r15
     e4c:	40 23       	and	r20, r16
     e4e:	51 23       	and	r21, r17
     e50:	21 15       	cp	r18, r1
     e52:	31 05       	cpc	r19, r1
     e54:	41 05       	cpc	r20, r1
     e56:	51 05       	cpc	r21, r1
     e58:	21 f0       	breq	.+8      	; 0xe62 <_fpadd_parts+0x10c>
     e5a:	21 e0       	ldi	r18, 0x01	; 1
     e5c:	30 e0       	ldi	r19, 0x00	; 0
     e5e:	40 e0       	ldi	r20, 0x00	; 0
     e60:	50 e0       	ldi	r21, 0x00	; 0
     e62:	79 01       	movw	r14, r18
     e64:	8a 01       	movw	r16, r20
     e66:	e6 28       	or	r14, r6
     e68:	f7 28       	or	r15, r7
     e6a:	08 29       	or	r16, r8
     e6c:	19 29       	or	r17, r9
     e6e:	3c c0       	rjmp	.+120    	; 0xee8 <_fpadd_parts+0x192>
     e70:	23 2b       	or	r18, r19
     e72:	d1 f1       	breq	.+116    	; 0xee8 <_fpadd_parts+0x192>
     e74:	26 0e       	add	r2, r22
     e76:	37 1e       	adc	r3, r23
     e78:	35 01       	movw	r6, r10
     e7a:	46 01       	movw	r8, r12
     e7c:	06 2e       	mov	r0, r22
     e7e:	04 c0       	rjmp	.+8      	; 0xe88 <_fpadd_parts+0x132>
     e80:	96 94       	lsr	r9
     e82:	87 94       	ror	r8
     e84:	77 94       	ror	r7
     e86:	67 94       	ror	r6
     e88:	0a 94       	dec	r0
     e8a:	d2 f7       	brpl	.-12     	; 0xe80 <_fpadd_parts+0x12a>
     e8c:	21 e0       	ldi	r18, 0x01	; 1
     e8e:	30 e0       	ldi	r19, 0x00	; 0
     e90:	40 e0       	ldi	r20, 0x00	; 0
     e92:	50 e0       	ldi	r21, 0x00	; 0
     e94:	04 c0       	rjmp	.+8      	; 0xe9e <_fpadd_parts+0x148>
     e96:	22 0f       	add	r18, r18
     e98:	33 1f       	adc	r19, r19
     e9a:	44 1f       	adc	r20, r20
     e9c:	55 1f       	adc	r21, r21
     e9e:	6a 95       	dec	r22
     ea0:	d2 f7       	brpl	.-12     	; 0xe96 <_fpadd_parts+0x140>
     ea2:	21 50       	subi	r18, 0x01	; 1
     ea4:	30 40       	sbci	r19, 0x00	; 0
     ea6:	40 40       	sbci	r20, 0x00	; 0
     ea8:	50 40       	sbci	r21, 0x00	; 0
     eaa:	2a 21       	and	r18, r10
     eac:	3b 21       	and	r19, r11
     eae:	4c 21       	and	r20, r12
     eb0:	5d 21       	and	r21, r13
     eb2:	21 15       	cp	r18, r1
     eb4:	31 05       	cpc	r19, r1
     eb6:	41 05       	cpc	r20, r1
     eb8:	51 05       	cpc	r21, r1
     eba:	21 f0       	breq	.+8      	; 0xec4 <_fpadd_parts+0x16e>
     ebc:	21 e0       	ldi	r18, 0x01	; 1
     ebe:	30 e0       	ldi	r19, 0x00	; 0
     ec0:	40 e0       	ldi	r20, 0x00	; 0
     ec2:	50 e0       	ldi	r21, 0x00	; 0
     ec4:	59 01       	movw	r10, r18
     ec6:	6a 01       	movw	r12, r20
     ec8:	a6 28       	or	r10, r6
     eca:	b7 28       	or	r11, r7
     ecc:	c8 28       	or	r12, r8
     ece:	d9 28       	or	r13, r9
     ed0:	0b c0       	rjmp	.+22     	; 0xee8 <_fpadd_parts+0x192>
     ed2:	82 15       	cp	r24, r2
     ed4:	93 05       	cpc	r25, r3
     ed6:	2c f0       	brlt	.+10     	; 0xee2 <_fpadd_parts+0x18c>
     ed8:	1c 01       	movw	r2, r24
     eda:	aa 24       	eor	r10, r10
     edc:	bb 24       	eor	r11, r11
     ede:	65 01       	movw	r12, r10
     ee0:	03 c0       	rjmp	.+6      	; 0xee8 <_fpadd_parts+0x192>
     ee2:	ee 24       	eor	r14, r14
     ee4:	ff 24       	eor	r15, r15
     ee6:	87 01       	movw	r16, r14
     ee8:	11 96       	adiw	r26, 0x01	; 1
     eea:	9c 91       	ld	r25, X
     eec:	d2 01       	movw	r26, r4
     eee:	11 96       	adiw	r26, 0x01	; 1
     ef0:	8c 91       	ld	r24, X
     ef2:	98 17       	cp	r25, r24
     ef4:	09 f4       	brne	.+2      	; 0xef8 <_fpadd_parts+0x1a2>
     ef6:	45 c0       	rjmp	.+138    	; 0xf82 <_fpadd_parts+0x22c>
     ef8:	99 23       	and	r25, r25
     efa:	39 f0       	breq	.+14     	; 0xf0a <_fpadd_parts+0x1b4>
     efc:	a8 01       	movw	r20, r16
     efe:	97 01       	movw	r18, r14
     f00:	2a 19       	sub	r18, r10
     f02:	3b 09       	sbc	r19, r11
     f04:	4c 09       	sbc	r20, r12
     f06:	5d 09       	sbc	r21, r13
     f08:	06 c0       	rjmp	.+12     	; 0xf16 <_fpadd_parts+0x1c0>
     f0a:	a6 01       	movw	r20, r12
     f0c:	95 01       	movw	r18, r10
     f0e:	2e 19       	sub	r18, r14
     f10:	3f 09       	sbc	r19, r15
     f12:	40 0b       	sbc	r20, r16
     f14:	51 0b       	sbc	r21, r17
     f16:	57 fd       	sbrc	r21, 7
     f18:	08 c0       	rjmp	.+16     	; 0xf2a <_fpadd_parts+0x1d4>
     f1a:	11 82       	std	Z+1, r1	; 0x01
     f1c:	33 82       	std	Z+3, r3	; 0x03
     f1e:	22 82       	std	Z+2, r2	; 0x02
     f20:	24 83       	std	Z+4, r18	; 0x04
     f22:	35 83       	std	Z+5, r19	; 0x05
     f24:	46 83       	std	Z+6, r20	; 0x06
     f26:	57 83       	std	Z+7, r21	; 0x07
     f28:	1d c0       	rjmp	.+58     	; 0xf64 <_fpadd_parts+0x20e>
     f2a:	81 e0       	ldi	r24, 0x01	; 1
     f2c:	81 83       	std	Z+1, r24	; 0x01
     f2e:	33 82       	std	Z+3, r3	; 0x03
     f30:	22 82       	std	Z+2, r2	; 0x02
     f32:	88 27       	eor	r24, r24
     f34:	99 27       	eor	r25, r25
     f36:	dc 01       	movw	r26, r24
     f38:	82 1b       	sub	r24, r18
     f3a:	93 0b       	sbc	r25, r19
     f3c:	a4 0b       	sbc	r26, r20
     f3e:	b5 0b       	sbc	r27, r21
     f40:	84 83       	std	Z+4, r24	; 0x04
     f42:	95 83       	std	Z+5, r25	; 0x05
     f44:	a6 83       	std	Z+6, r26	; 0x06
     f46:	b7 83       	std	Z+7, r27	; 0x07
     f48:	0d c0       	rjmp	.+26     	; 0xf64 <_fpadd_parts+0x20e>
     f4a:	22 0f       	add	r18, r18
     f4c:	33 1f       	adc	r19, r19
     f4e:	44 1f       	adc	r20, r20
     f50:	55 1f       	adc	r21, r21
     f52:	24 83       	std	Z+4, r18	; 0x04
     f54:	35 83       	std	Z+5, r19	; 0x05
     f56:	46 83       	std	Z+6, r20	; 0x06
     f58:	57 83       	std	Z+7, r21	; 0x07
     f5a:	82 81       	ldd	r24, Z+2	; 0x02
     f5c:	93 81       	ldd	r25, Z+3	; 0x03
     f5e:	01 97       	sbiw	r24, 0x01	; 1
     f60:	93 83       	std	Z+3, r25	; 0x03
     f62:	82 83       	std	Z+2, r24	; 0x02
     f64:	24 81       	ldd	r18, Z+4	; 0x04
     f66:	35 81       	ldd	r19, Z+5	; 0x05
     f68:	46 81       	ldd	r20, Z+6	; 0x06
     f6a:	57 81       	ldd	r21, Z+7	; 0x07
     f6c:	da 01       	movw	r26, r20
     f6e:	c9 01       	movw	r24, r18
     f70:	01 97       	sbiw	r24, 0x01	; 1
     f72:	a1 09       	sbc	r26, r1
     f74:	b1 09       	sbc	r27, r1
     f76:	8f 5f       	subi	r24, 0xFF	; 255
     f78:	9f 4f       	sbci	r25, 0xFF	; 255
     f7a:	af 4f       	sbci	r26, 0xFF	; 255
     f7c:	bf 43       	sbci	r27, 0x3F	; 63
     f7e:	28 f3       	brcs	.-54     	; 0xf4a <_fpadd_parts+0x1f4>
     f80:	0b c0       	rjmp	.+22     	; 0xf98 <_fpadd_parts+0x242>
     f82:	91 83       	std	Z+1, r25	; 0x01
     f84:	33 82       	std	Z+3, r3	; 0x03
     f86:	22 82       	std	Z+2, r2	; 0x02
     f88:	ea 0c       	add	r14, r10
     f8a:	fb 1c       	adc	r15, r11
     f8c:	0c 1d       	adc	r16, r12
     f8e:	1d 1d       	adc	r17, r13
     f90:	e4 82       	std	Z+4, r14	; 0x04
     f92:	f5 82       	std	Z+5, r15	; 0x05
     f94:	06 83       	std	Z+6, r16	; 0x06
     f96:	17 83       	std	Z+7, r17	; 0x07
     f98:	83 e0       	ldi	r24, 0x03	; 3
     f9a:	80 83       	st	Z, r24
     f9c:	24 81       	ldd	r18, Z+4	; 0x04
     f9e:	35 81       	ldd	r19, Z+5	; 0x05
     fa0:	46 81       	ldd	r20, Z+6	; 0x06
     fa2:	57 81       	ldd	r21, Z+7	; 0x07
     fa4:	57 ff       	sbrs	r21, 7
     fa6:	1a c0       	rjmp	.+52     	; 0xfdc <_fpadd_parts+0x286>
     fa8:	c9 01       	movw	r24, r18
     faa:	aa 27       	eor	r26, r26
     fac:	97 fd       	sbrc	r25, 7
     fae:	a0 95       	com	r26
     fb0:	ba 2f       	mov	r27, r26
     fb2:	81 70       	andi	r24, 0x01	; 1
     fb4:	90 70       	andi	r25, 0x00	; 0
     fb6:	a0 70       	andi	r26, 0x00	; 0
     fb8:	b0 70       	andi	r27, 0x00	; 0
     fba:	56 95       	lsr	r21
     fbc:	47 95       	ror	r20
     fbe:	37 95       	ror	r19
     fc0:	27 95       	ror	r18
     fc2:	82 2b       	or	r24, r18
     fc4:	93 2b       	or	r25, r19
     fc6:	a4 2b       	or	r26, r20
     fc8:	b5 2b       	or	r27, r21
     fca:	84 83       	std	Z+4, r24	; 0x04
     fcc:	95 83       	std	Z+5, r25	; 0x05
     fce:	a6 83       	std	Z+6, r26	; 0x06
     fd0:	b7 83       	std	Z+7, r27	; 0x07
     fd2:	82 81       	ldd	r24, Z+2	; 0x02
     fd4:	93 81       	ldd	r25, Z+3	; 0x03
     fd6:	01 96       	adiw	r24, 0x01	; 1
     fd8:	93 83       	std	Z+3, r25	; 0x03
     fda:	82 83       	std	Z+2, r24	; 0x02
     fdc:	df 01       	movw	r26, r30
     fde:	01 c0       	rjmp	.+2      	; 0xfe2 <_fpadd_parts+0x28c>
     fe0:	d2 01       	movw	r26, r4
     fe2:	cd 01       	movw	r24, r26
     fe4:	cd b7       	in	r28, 0x3d	; 61
     fe6:	de b7       	in	r29, 0x3e	; 62
     fe8:	e2 e1       	ldi	r30, 0x12	; 18
     fea:	0c 94 c5 0c 	jmp	0x198a	; 0x198a <__epilogue_restores__>

00000fee <__subsf3>:
     fee:	a0 e2       	ldi	r26, 0x20	; 32
     ff0:	b0 e0       	ldi	r27, 0x00	; 0
     ff2:	ed ef       	ldi	r30, 0xFD	; 253
     ff4:	f7 e0       	ldi	r31, 0x07	; 7
     ff6:	0c 94 b5 0c 	jmp	0x196a	; 0x196a <__prologue_saves__+0x18>
     ffa:	69 83       	std	Y+1, r22	; 0x01
     ffc:	7a 83       	std	Y+2, r23	; 0x02
     ffe:	8b 83       	std	Y+3, r24	; 0x03
    1000:	9c 83       	std	Y+4, r25	; 0x04
    1002:	2d 83       	std	Y+5, r18	; 0x05
    1004:	3e 83       	std	Y+6, r19	; 0x06
    1006:	4f 83       	std	Y+7, r20	; 0x07
    1008:	58 87       	std	Y+8, r21	; 0x08
    100a:	e9 e0       	ldi	r30, 0x09	; 9
    100c:	ee 2e       	mov	r14, r30
    100e:	f1 2c       	mov	r15, r1
    1010:	ec 0e       	add	r14, r28
    1012:	fd 1e       	adc	r15, r29
    1014:	ce 01       	movw	r24, r28
    1016:	01 96       	adiw	r24, 0x01	; 1
    1018:	b7 01       	movw	r22, r14
    101a:	0e 94 55 0b 	call	0x16aa	; 0x16aa <__unpack_f>
    101e:	8e 01       	movw	r16, r28
    1020:	0f 5e       	subi	r16, 0xEF	; 239
    1022:	1f 4f       	sbci	r17, 0xFF	; 255
    1024:	ce 01       	movw	r24, r28
    1026:	05 96       	adiw	r24, 0x05	; 5
    1028:	b8 01       	movw	r22, r16
    102a:	0e 94 55 0b 	call	0x16aa	; 0x16aa <__unpack_f>
    102e:	8a 89       	ldd	r24, Y+18	; 0x12
    1030:	91 e0       	ldi	r25, 0x01	; 1
    1032:	89 27       	eor	r24, r25
    1034:	8a 8b       	std	Y+18, r24	; 0x12
    1036:	c7 01       	movw	r24, r14
    1038:	b8 01       	movw	r22, r16
    103a:	ae 01       	movw	r20, r28
    103c:	47 5e       	subi	r20, 0xE7	; 231
    103e:	5f 4f       	sbci	r21, 0xFF	; 255
    1040:	0e 94 ab 06 	call	0xd56	; 0xd56 <_fpadd_parts>
    1044:	0e 94 80 0a 	call	0x1500	; 0x1500 <__pack_f>
    1048:	a0 96       	adiw	r28, 0x20	; 32
    104a:	e6 e0       	ldi	r30, 0x06	; 6
    104c:	0c 94 d1 0c 	jmp	0x19a2	; 0x19a2 <__epilogue_restores__+0x18>

00001050 <__addsf3>:
    1050:	a0 e2       	ldi	r26, 0x20	; 32
    1052:	b0 e0       	ldi	r27, 0x00	; 0
    1054:	ee e2       	ldi	r30, 0x2E	; 46
    1056:	f8 e0       	ldi	r31, 0x08	; 8
    1058:	0c 94 b5 0c 	jmp	0x196a	; 0x196a <__prologue_saves__+0x18>
    105c:	69 83       	std	Y+1, r22	; 0x01
    105e:	7a 83       	std	Y+2, r23	; 0x02
    1060:	8b 83       	std	Y+3, r24	; 0x03
    1062:	9c 83       	std	Y+4, r25	; 0x04
    1064:	2d 83       	std	Y+5, r18	; 0x05
    1066:	3e 83       	std	Y+6, r19	; 0x06
    1068:	4f 83       	std	Y+7, r20	; 0x07
    106a:	58 87       	std	Y+8, r21	; 0x08
    106c:	f9 e0       	ldi	r31, 0x09	; 9
    106e:	ef 2e       	mov	r14, r31
    1070:	f1 2c       	mov	r15, r1
    1072:	ec 0e       	add	r14, r28
    1074:	fd 1e       	adc	r15, r29
    1076:	ce 01       	movw	r24, r28
    1078:	01 96       	adiw	r24, 0x01	; 1
    107a:	b7 01       	movw	r22, r14
    107c:	0e 94 55 0b 	call	0x16aa	; 0x16aa <__unpack_f>
    1080:	8e 01       	movw	r16, r28
    1082:	0f 5e       	subi	r16, 0xEF	; 239
    1084:	1f 4f       	sbci	r17, 0xFF	; 255
    1086:	ce 01       	movw	r24, r28
    1088:	05 96       	adiw	r24, 0x05	; 5
    108a:	b8 01       	movw	r22, r16
    108c:	0e 94 55 0b 	call	0x16aa	; 0x16aa <__unpack_f>
    1090:	c7 01       	movw	r24, r14
    1092:	b8 01       	movw	r22, r16
    1094:	ae 01       	movw	r20, r28
    1096:	47 5e       	subi	r20, 0xE7	; 231
    1098:	5f 4f       	sbci	r21, 0xFF	; 255
    109a:	0e 94 ab 06 	call	0xd56	; 0xd56 <_fpadd_parts>
    109e:	0e 94 80 0a 	call	0x1500	; 0x1500 <__pack_f>
    10a2:	a0 96       	adiw	r28, 0x20	; 32
    10a4:	e6 e0       	ldi	r30, 0x06	; 6
    10a6:	0c 94 d1 0c 	jmp	0x19a2	; 0x19a2 <__epilogue_restores__+0x18>

000010aa <__mulsf3>:
    10aa:	a0 e2       	ldi	r26, 0x20	; 32
    10ac:	b0 e0       	ldi	r27, 0x00	; 0
    10ae:	eb e5       	ldi	r30, 0x5B	; 91
    10b0:	f8 e0       	ldi	r31, 0x08	; 8
    10b2:	0c 94 a9 0c 	jmp	0x1952	; 0x1952 <__prologue_saves__>
    10b6:	69 83       	std	Y+1, r22	; 0x01
    10b8:	7a 83       	std	Y+2, r23	; 0x02
    10ba:	8b 83       	std	Y+3, r24	; 0x03
    10bc:	9c 83       	std	Y+4, r25	; 0x04
    10be:	2d 83       	std	Y+5, r18	; 0x05
    10c0:	3e 83       	std	Y+6, r19	; 0x06
    10c2:	4f 83       	std	Y+7, r20	; 0x07
    10c4:	58 87       	std	Y+8, r21	; 0x08
    10c6:	ce 01       	movw	r24, r28
    10c8:	01 96       	adiw	r24, 0x01	; 1
    10ca:	be 01       	movw	r22, r28
    10cc:	67 5f       	subi	r22, 0xF7	; 247
    10ce:	7f 4f       	sbci	r23, 0xFF	; 255
    10d0:	0e 94 55 0b 	call	0x16aa	; 0x16aa <__unpack_f>
    10d4:	ce 01       	movw	r24, r28
    10d6:	05 96       	adiw	r24, 0x05	; 5
    10d8:	be 01       	movw	r22, r28
    10da:	6f 5e       	subi	r22, 0xEF	; 239
    10dc:	7f 4f       	sbci	r23, 0xFF	; 255
    10de:	0e 94 55 0b 	call	0x16aa	; 0x16aa <__unpack_f>
    10e2:	99 85       	ldd	r25, Y+9	; 0x09
    10e4:	92 30       	cpi	r25, 0x02	; 2
    10e6:	88 f0       	brcs	.+34     	; 0x110a <__mulsf3+0x60>
    10e8:	89 89       	ldd	r24, Y+17	; 0x11
    10ea:	82 30       	cpi	r24, 0x02	; 2
    10ec:	c8 f0       	brcs	.+50     	; 0x1120 <__mulsf3+0x76>
    10ee:	94 30       	cpi	r25, 0x04	; 4
    10f0:	19 f4       	brne	.+6      	; 0x10f8 <__mulsf3+0x4e>
    10f2:	82 30       	cpi	r24, 0x02	; 2
    10f4:	51 f4       	brne	.+20     	; 0x110a <__mulsf3+0x60>
    10f6:	04 c0       	rjmp	.+8      	; 0x1100 <__mulsf3+0x56>
    10f8:	84 30       	cpi	r24, 0x04	; 4
    10fa:	29 f4       	brne	.+10     	; 0x1106 <__mulsf3+0x5c>
    10fc:	92 30       	cpi	r25, 0x02	; 2
    10fe:	81 f4       	brne	.+32     	; 0x1120 <__mulsf3+0x76>
    1100:	80 e0       	ldi	r24, 0x00	; 0
    1102:	92 e0       	ldi	r25, 0x02	; 2
    1104:	c6 c0       	rjmp	.+396    	; 0x1292 <__mulsf3+0x1e8>
    1106:	92 30       	cpi	r25, 0x02	; 2
    1108:	49 f4       	brne	.+18     	; 0x111c <__mulsf3+0x72>
    110a:	20 e0       	ldi	r18, 0x00	; 0
    110c:	9a 85       	ldd	r25, Y+10	; 0x0a
    110e:	8a 89       	ldd	r24, Y+18	; 0x12
    1110:	98 13       	cpse	r25, r24
    1112:	21 e0       	ldi	r18, 0x01	; 1
    1114:	2a 87       	std	Y+10, r18	; 0x0a
    1116:	ce 01       	movw	r24, r28
    1118:	09 96       	adiw	r24, 0x09	; 9
    111a:	bb c0       	rjmp	.+374    	; 0x1292 <__mulsf3+0x1e8>
    111c:	82 30       	cpi	r24, 0x02	; 2
    111e:	49 f4       	brne	.+18     	; 0x1132 <__mulsf3+0x88>
    1120:	20 e0       	ldi	r18, 0x00	; 0
    1122:	9a 85       	ldd	r25, Y+10	; 0x0a
    1124:	8a 89       	ldd	r24, Y+18	; 0x12
    1126:	98 13       	cpse	r25, r24
    1128:	21 e0       	ldi	r18, 0x01	; 1
    112a:	2a 8b       	std	Y+18, r18	; 0x12
    112c:	ce 01       	movw	r24, r28
    112e:	41 96       	adiw	r24, 0x11	; 17
    1130:	b0 c0       	rjmp	.+352    	; 0x1292 <__mulsf3+0x1e8>
    1132:	2d 84       	ldd	r2, Y+13	; 0x0d
    1134:	3e 84       	ldd	r3, Y+14	; 0x0e
    1136:	4f 84       	ldd	r4, Y+15	; 0x0f
    1138:	58 88       	ldd	r5, Y+16	; 0x10
    113a:	6d 88       	ldd	r6, Y+21	; 0x15
    113c:	7e 88       	ldd	r7, Y+22	; 0x16
    113e:	8f 88       	ldd	r8, Y+23	; 0x17
    1140:	98 8c       	ldd	r9, Y+24	; 0x18
    1142:	ee 24       	eor	r14, r14
    1144:	ff 24       	eor	r15, r15
    1146:	87 01       	movw	r16, r14
    1148:	aa 24       	eor	r10, r10
    114a:	bb 24       	eor	r11, r11
    114c:	65 01       	movw	r12, r10
    114e:	40 e0       	ldi	r20, 0x00	; 0
    1150:	50 e0       	ldi	r21, 0x00	; 0
    1152:	60 e0       	ldi	r22, 0x00	; 0
    1154:	70 e0       	ldi	r23, 0x00	; 0
    1156:	e0 e0       	ldi	r30, 0x00	; 0
    1158:	f0 e0       	ldi	r31, 0x00	; 0
    115a:	c1 01       	movw	r24, r2
    115c:	81 70       	andi	r24, 0x01	; 1
    115e:	90 70       	andi	r25, 0x00	; 0
    1160:	89 2b       	or	r24, r25
    1162:	e9 f0       	breq	.+58     	; 0x119e <__mulsf3+0xf4>
    1164:	e6 0c       	add	r14, r6
    1166:	f7 1c       	adc	r15, r7
    1168:	08 1d       	adc	r16, r8
    116a:	19 1d       	adc	r17, r9
    116c:	9a 01       	movw	r18, r20
    116e:	ab 01       	movw	r20, r22
    1170:	2a 0d       	add	r18, r10
    1172:	3b 1d       	adc	r19, r11
    1174:	4c 1d       	adc	r20, r12
    1176:	5d 1d       	adc	r21, r13
    1178:	80 e0       	ldi	r24, 0x00	; 0
    117a:	90 e0       	ldi	r25, 0x00	; 0
    117c:	a0 e0       	ldi	r26, 0x00	; 0
    117e:	b0 e0       	ldi	r27, 0x00	; 0
    1180:	e6 14       	cp	r14, r6
    1182:	f7 04       	cpc	r15, r7
    1184:	08 05       	cpc	r16, r8
    1186:	19 05       	cpc	r17, r9
    1188:	20 f4       	brcc	.+8      	; 0x1192 <__mulsf3+0xe8>
    118a:	81 e0       	ldi	r24, 0x01	; 1
    118c:	90 e0       	ldi	r25, 0x00	; 0
    118e:	a0 e0       	ldi	r26, 0x00	; 0
    1190:	b0 e0       	ldi	r27, 0x00	; 0
    1192:	ba 01       	movw	r22, r20
    1194:	a9 01       	movw	r20, r18
    1196:	48 0f       	add	r20, r24
    1198:	59 1f       	adc	r21, r25
    119a:	6a 1f       	adc	r22, r26
    119c:	7b 1f       	adc	r23, r27
    119e:	aa 0c       	add	r10, r10
    11a0:	bb 1c       	adc	r11, r11
    11a2:	cc 1c       	adc	r12, r12
    11a4:	dd 1c       	adc	r13, r13
    11a6:	97 fe       	sbrs	r9, 7
    11a8:	08 c0       	rjmp	.+16     	; 0x11ba <__mulsf3+0x110>
    11aa:	81 e0       	ldi	r24, 0x01	; 1
    11ac:	90 e0       	ldi	r25, 0x00	; 0
    11ae:	a0 e0       	ldi	r26, 0x00	; 0
    11b0:	b0 e0       	ldi	r27, 0x00	; 0
    11b2:	a8 2a       	or	r10, r24
    11b4:	b9 2a       	or	r11, r25
    11b6:	ca 2a       	or	r12, r26
    11b8:	db 2a       	or	r13, r27
    11ba:	31 96       	adiw	r30, 0x01	; 1
    11bc:	e0 32       	cpi	r30, 0x20	; 32
    11be:	f1 05       	cpc	r31, r1
    11c0:	49 f0       	breq	.+18     	; 0x11d4 <__mulsf3+0x12a>
    11c2:	66 0c       	add	r6, r6
    11c4:	77 1c       	adc	r7, r7
    11c6:	88 1c       	adc	r8, r8
    11c8:	99 1c       	adc	r9, r9
    11ca:	56 94       	lsr	r5
    11cc:	47 94       	ror	r4
    11ce:	37 94       	ror	r3
    11d0:	27 94       	ror	r2
    11d2:	c3 cf       	rjmp	.-122    	; 0x115a <__mulsf3+0xb0>
    11d4:	fa 85       	ldd	r31, Y+10	; 0x0a
    11d6:	ea 89       	ldd	r30, Y+18	; 0x12
    11d8:	2b 89       	ldd	r18, Y+19	; 0x13
    11da:	3c 89       	ldd	r19, Y+20	; 0x14
    11dc:	8b 85       	ldd	r24, Y+11	; 0x0b
    11de:	9c 85       	ldd	r25, Y+12	; 0x0c
    11e0:	28 0f       	add	r18, r24
    11e2:	39 1f       	adc	r19, r25
    11e4:	2e 5f       	subi	r18, 0xFE	; 254
    11e6:	3f 4f       	sbci	r19, 0xFF	; 255
    11e8:	17 c0       	rjmp	.+46     	; 0x1218 <__mulsf3+0x16e>
    11ea:	ca 01       	movw	r24, r20
    11ec:	81 70       	andi	r24, 0x01	; 1
    11ee:	90 70       	andi	r25, 0x00	; 0
    11f0:	89 2b       	or	r24, r25
    11f2:	61 f0       	breq	.+24     	; 0x120c <__mulsf3+0x162>
    11f4:	16 95       	lsr	r17
    11f6:	07 95       	ror	r16
    11f8:	f7 94       	ror	r15
    11fa:	e7 94       	ror	r14
    11fc:	80 e0       	ldi	r24, 0x00	; 0
    11fe:	90 e0       	ldi	r25, 0x00	; 0
    1200:	a0 e0       	ldi	r26, 0x00	; 0
    1202:	b0 e8       	ldi	r27, 0x80	; 128
    1204:	e8 2a       	or	r14, r24
    1206:	f9 2a       	or	r15, r25
    1208:	0a 2b       	or	r16, r26
    120a:	1b 2b       	or	r17, r27
    120c:	76 95       	lsr	r23
    120e:	67 95       	ror	r22
    1210:	57 95       	ror	r21
    1212:	47 95       	ror	r20
    1214:	2f 5f       	subi	r18, 0xFF	; 255
    1216:	3f 4f       	sbci	r19, 0xFF	; 255
    1218:	77 fd       	sbrc	r23, 7
    121a:	e7 cf       	rjmp	.-50     	; 0x11ea <__mulsf3+0x140>
    121c:	0c c0       	rjmp	.+24     	; 0x1236 <__mulsf3+0x18c>
    121e:	44 0f       	add	r20, r20
    1220:	55 1f       	adc	r21, r21
    1222:	66 1f       	adc	r22, r22
    1224:	77 1f       	adc	r23, r23
    1226:	17 fd       	sbrc	r17, 7
    1228:	41 60       	ori	r20, 0x01	; 1
    122a:	ee 0c       	add	r14, r14
    122c:	ff 1c       	adc	r15, r15
    122e:	00 1f       	adc	r16, r16
    1230:	11 1f       	adc	r17, r17
    1232:	21 50       	subi	r18, 0x01	; 1
    1234:	30 40       	sbci	r19, 0x00	; 0
    1236:	40 30       	cpi	r20, 0x00	; 0
    1238:	90 e0       	ldi	r25, 0x00	; 0
    123a:	59 07       	cpc	r21, r25
    123c:	90 e0       	ldi	r25, 0x00	; 0
    123e:	69 07       	cpc	r22, r25
    1240:	90 e4       	ldi	r25, 0x40	; 64
    1242:	79 07       	cpc	r23, r25
    1244:	60 f3       	brcs	.-40     	; 0x121e <__mulsf3+0x174>
    1246:	2b 8f       	std	Y+27, r18	; 0x1b
    1248:	3c 8f       	std	Y+28, r19	; 0x1c
    124a:	db 01       	movw	r26, r22
    124c:	ca 01       	movw	r24, r20
    124e:	8f 77       	andi	r24, 0x7F	; 127
    1250:	90 70       	andi	r25, 0x00	; 0
    1252:	a0 70       	andi	r26, 0x00	; 0
    1254:	b0 70       	andi	r27, 0x00	; 0
    1256:	80 34       	cpi	r24, 0x40	; 64
    1258:	91 05       	cpc	r25, r1
    125a:	a1 05       	cpc	r26, r1
    125c:	b1 05       	cpc	r27, r1
    125e:	61 f4       	brne	.+24     	; 0x1278 <__mulsf3+0x1ce>
    1260:	47 fd       	sbrc	r20, 7
    1262:	0a c0       	rjmp	.+20     	; 0x1278 <__mulsf3+0x1ce>
    1264:	e1 14       	cp	r14, r1
    1266:	f1 04       	cpc	r15, r1
    1268:	01 05       	cpc	r16, r1
    126a:	11 05       	cpc	r17, r1
    126c:	29 f0       	breq	.+10     	; 0x1278 <__mulsf3+0x1ce>
    126e:	40 5c       	subi	r20, 0xC0	; 192
    1270:	5f 4f       	sbci	r21, 0xFF	; 255
    1272:	6f 4f       	sbci	r22, 0xFF	; 255
    1274:	7f 4f       	sbci	r23, 0xFF	; 255
    1276:	40 78       	andi	r20, 0x80	; 128
    1278:	1a 8e       	std	Y+26, r1	; 0x1a
    127a:	fe 17       	cp	r31, r30
    127c:	11 f0       	breq	.+4      	; 0x1282 <__mulsf3+0x1d8>
    127e:	81 e0       	ldi	r24, 0x01	; 1
    1280:	8a 8f       	std	Y+26, r24	; 0x1a
    1282:	4d 8f       	std	Y+29, r20	; 0x1d
    1284:	5e 8f       	std	Y+30, r21	; 0x1e
    1286:	6f 8f       	std	Y+31, r22	; 0x1f
    1288:	78 a3       	std	Y+32, r23	; 0x20
    128a:	83 e0       	ldi	r24, 0x03	; 3
    128c:	89 8f       	std	Y+25, r24	; 0x19
    128e:	ce 01       	movw	r24, r28
    1290:	49 96       	adiw	r24, 0x19	; 25
    1292:	0e 94 80 0a 	call	0x1500	; 0x1500 <__pack_f>
    1296:	a0 96       	adiw	r28, 0x20	; 32
    1298:	e2 e1       	ldi	r30, 0x12	; 18
    129a:	0c 94 c5 0c 	jmp	0x198a	; 0x198a <__epilogue_restores__>

0000129e <__gesf2>:
    129e:	a8 e1       	ldi	r26, 0x18	; 24
    12a0:	b0 e0       	ldi	r27, 0x00	; 0
    12a2:	e5 e5       	ldi	r30, 0x55	; 85
    12a4:	f9 e0       	ldi	r31, 0x09	; 9
    12a6:	0c 94 b5 0c 	jmp	0x196a	; 0x196a <__prologue_saves__+0x18>
    12aa:	69 83       	std	Y+1, r22	; 0x01
    12ac:	7a 83       	std	Y+2, r23	; 0x02
    12ae:	8b 83       	std	Y+3, r24	; 0x03
    12b0:	9c 83       	std	Y+4, r25	; 0x04
    12b2:	2d 83       	std	Y+5, r18	; 0x05
    12b4:	3e 83       	std	Y+6, r19	; 0x06
    12b6:	4f 83       	std	Y+7, r20	; 0x07
    12b8:	58 87       	std	Y+8, r21	; 0x08
    12ba:	89 e0       	ldi	r24, 0x09	; 9
    12bc:	e8 2e       	mov	r14, r24
    12be:	f1 2c       	mov	r15, r1
    12c0:	ec 0e       	add	r14, r28
    12c2:	fd 1e       	adc	r15, r29
    12c4:	ce 01       	movw	r24, r28
    12c6:	01 96       	adiw	r24, 0x01	; 1
    12c8:	b7 01       	movw	r22, r14
    12ca:	0e 94 55 0b 	call	0x16aa	; 0x16aa <__unpack_f>
    12ce:	8e 01       	movw	r16, r28
    12d0:	0f 5e       	subi	r16, 0xEF	; 239
    12d2:	1f 4f       	sbci	r17, 0xFF	; 255
    12d4:	ce 01       	movw	r24, r28
    12d6:	05 96       	adiw	r24, 0x05	; 5
    12d8:	b8 01       	movw	r22, r16
    12da:	0e 94 55 0b 	call	0x16aa	; 0x16aa <__unpack_f>
    12de:	89 85       	ldd	r24, Y+9	; 0x09
    12e0:	82 30       	cpi	r24, 0x02	; 2
    12e2:	40 f0       	brcs	.+16     	; 0x12f4 <__gesf2+0x56>
    12e4:	89 89       	ldd	r24, Y+17	; 0x11
    12e6:	82 30       	cpi	r24, 0x02	; 2
    12e8:	28 f0       	brcs	.+10     	; 0x12f4 <__gesf2+0x56>
    12ea:	c7 01       	movw	r24, r14
    12ec:	b8 01       	movw	r22, r16
    12ee:	0e 94 cd 0b 	call	0x179a	; 0x179a <__fpcmp_parts_f>
    12f2:	01 c0       	rjmp	.+2      	; 0x12f6 <__gesf2+0x58>
    12f4:	8f ef       	ldi	r24, 0xFF	; 255
    12f6:	68 96       	adiw	r28, 0x18	; 24
    12f8:	e6 e0       	ldi	r30, 0x06	; 6
    12fa:	0c 94 d1 0c 	jmp	0x19a2	; 0x19a2 <__epilogue_restores__+0x18>

000012fe <__floatsisf>:
    12fe:	a8 e0       	ldi	r26, 0x08	; 8
    1300:	b0 e0       	ldi	r27, 0x00	; 0
    1302:	e5 e8       	ldi	r30, 0x85	; 133
    1304:	f9 e0       	ldi	r31, 0x09	; 9
    1306:	0c 94 b2 0c 	jmp	0x1964	; 0x1964 <__prologue_saves__+0x12>
    130a:	9b 01       	movw	r18, r22
    130c:	ac 01       	movw	r20, r24
    130e:	83 e0       	ldi	r24, 0x03	; 3
    1310:	89 83       	std	Y+1, r24	; 0x01
    1312:	da 01       	movw	r26, r20
    1314:	c9 01       	movw	r24, r18
    1316:	88 27       	eor	r24, r24
    1318:	b7 fd       	sbrc	r27, 7
    131a:	83 95       	inc	r24
    131c:	99 27       	eor	r25, r25
    131e:	aa 27       	eor	r26, r26
    1320:	bb 27       	eor	r27, r27
    1322:	b8 2e       	mov	r11, r24
    1324:	21 15       	cp	r18, r1
    1326:	31 05       	cpc	r19, r1
    1328:	41 05       	cpc	r20, r1
    132a:	51 05       	cpc	r21, r1
    132c:	19 f4       	brne	.+6      	; 0x1334 <__floatsisf+0x36>
    132e:	82 e0       	ldi	r24, 0x02	; 2
    1330:	89 83       	std	Y+1, r24	; 0x01
    1332:	3a c0       	rjmp	.+116    	; 0x13a8 <__floatsisf+0xaa>
    1334:	88 23       	and	r24, r24
    1336:	a9 f0       	breq	.+42     	; 0x1362 <__floatsisf+0x64>
    1338:	20 30       	cpi	r18, 0x00	; 0
    133a:	80 e0       	ldi	r24, 0x00	; 0
    133c:	38 07       	cpc	r19, r24
    133e:	80 e0       	ldi	r24, 0x00	; 0
    1340:	48 07       	cpc	r20, r24
    1342:	80 e8       	ldi	r24, 0x80	; 128
    1344:	58 07       	cpc	r21, r24
    1346:	29 f4       	brne	.+10     	; 0x1352 <__floatsisf+0x54>
    1348:	60 e0       	ldi	r22, 0x00	; 0
    134a:	70 e0       	ldi	r23, 0x00	; 0
    134c:	80 e0       	ldi	r24, 0x00	; 0
    134e:	9f ec       	ldi	r25, 0xCF	; 207
    1350:	30 c0       	rjmp	.+96     	; 0x13b2 <__floatsisf+0xb4>
    1352:	ee 24       	eor	r14, r14
    1354:	ff 24       	eor	r15, r15
    1356:	87 01       	movw	r16, r14
    1358:	e2 1a       	sub	r14, r18
    135a:	f3 0a       	sbc	r15, r19
    135c:	04 0b       	sbc	r16, r20
    135e:	15 0b       	sbc	r17, r21
    1360:	02 c0       	rjmp	.+4      	; 0x1366 <__floatsisf+0x68>
    1362:	79 01       	movw	r14, r18
    1364:	8a 01       	movw	r16, r20
    1366:	8e e1       	ldi	r24, 0x1E	; 30
    1368:	c8 2e       	mov	r12, r24
    136a:	d1 2c       	mov	r13, r1
    136c:	dc 82       	std	Y+4, r13	; 0x04
    136e:	cb 82       	std	Y+3, r12	; 0x03
    1370:	ed 82       	std	Y+5, r14	; 0x05
    1372:	fe 82       	std	Y+6, r15	; 0x06
    1374:	0f 83       	std	Y+7, r16	; 0x07
    1376:	18 87       	std	Y+8, r17	; 0x08
    1378:	c8 01       	movw	r24, r16
    137a:	b7 01       	movw	r22, r14
    137c:	0e 94 31 0a 	call	0x1462	; 0x1462 <__clzsi2>
    1380:	01 97       	sbiw	r24, 0x01	; 1
    1382:	18 16       	cp	r1, r24
    1384:	19 06       	cpc	r1, r25
    1386:	84 f4       	brge	.+32     	; 0x13a8 <__floatsisf+0xaa>
    1388:	08 2e       	mov	r0, r24
    138a:	04 c0       	rjmp	.+8      	; 0x1394 <__floatsisf+0x96>
    138c:	ee 0c       	add	r14, r14
    138e:	ff 1c       	adc	r15, r15
    1390:	00 1f       	adc	r16, r16
    1392:	11 1f       	adc	r17, r17
    1394:	0a 94       	dec	r0
    1396:	d2 f7       	brpl	.-12     	; 0x138c <__floatsisf+0x8e>
    1398:	ed 82       	std	Y+5, r14	; 0x05
    139a:	fe 82       	std	Y+6, r15	; 0x06
    139c:	0f 83       	std	Y+7, r16	; 0x07
    139e:	18 87       	std	Y+8, r17	; 0x08
    13a0:	c8 1a       	sub	r12, r24
    13a2:	d9 0a       	sbc	r13, r25
    13a4:	dc 82       	std	Y+4, r13	; 0x04
    13a6:	cb 82       	std	Y+3, r12	; 0x03
    13a8:	ba 82       	std	Y+2, r11	; 0x02
    13aa:	ce 01       	movw	r24, r28
    13ac:	01 96       	adiw	r24, 0x01	; 1
    13ae:	0e 94 80 0a 	call	0x1500	; 0x1500 <__pack_f>
    13b2:	28 96       	adiw	r28, 0x08	; 8
    13b4:	e9 e0       	ldi	r30, 0x09	; 9
    13b6:	0c 94 ce 0c 	jmp	0x199c	; 0x199c <__epilogue_restores__+0x12>

000013ba <__fixsfsi>:
    13ba:	ac e0       	ldi	r26, 0x0C	; 12
    13bc:	b0 e0       	ldi	r27, 0x00	; 0
    13be:	e3 ee       	ldi	r30, 0xE3	; 227
    13c0:	f9 e0       	ldi	r31, 0x09	; 9
    13c2:	0c 94 b9 0c 	jmp	0x1972	; 0x1972 <__prologue_saves__+0x20>
    13c6:	69 83       	std	Y+1, r22	; 0x01
    13c8:	7a 83       	std	Y+2, r23	; 0x02
    13ca:	8b 83       	std	Y+3, r24	; 0x03
    13cc:	9c 83       	std	Y+4, r25	; 0x04
    13ce:	ce 01       	movw	r24, r28
    13d0:	01 96       	adiw	r24, 0x01	; 1
    13d2:	be 01       	movw	r22, r28
    13d4:	6b 5f       	subi	r22, 0xFB	; 251
    13d6:	7f 4f       	sbci	r23, 0xFF	; 255
    13d8:	0e 94 55 0b 	call	0x16aa	; 0x16aa <__unpack_f>
    13dc:	8d 81       	ldd	r24, Y+5	; 0x05
    13de:	82 30       	cpi	r24, 0x02	; 2
    13e0:	61 f1       	breq	.+88     	; 0x143a <__fixsfsi+0x80>
    13e2:	82 30       	cpi	r24, 0x02	; 2
    13e4:	50 f1       	brcs	.+84     	; 0x143a <__fixsfsi+0x80>
    13e6:	84 30       	cpi	r24, 0x04	; 4
    13e8:	21 f4       	brne	.+8      	; 0x13f2 <__fixsfsi+0x38>
    13ea:	8e 81       	ldd	r24, Y+6	; 0x06
    13ec:	88 23       	and	r24, r24
    13ee:	51 f1       	breq	.+84     	; 0x1444 <__fixsfsi+0x8a>
    13f0:	2e c0       	rjmp	.+92     	; 0x144e <__fixsfsi+0x94>
    13f2:	2f 81       	ldd	r18, Y+7	; 0x07
    13f4:	38 85       	ldd	r19, Y+8	; 0x08
    13f6:	37 fd       	sbrc	r19, 7
    13f8:	20 c0       	rjmp	.+64     	; 0x143a <__fixsfsi+0x80>
    13fa:	6e 81       	ldd	r22, Y+6	; 0x06
    13fc:	2f 31       	cpi	r18, 0x1F	; 31
    13fe:	31 05       	cpc	r19, r1
    1400:	1c f0       	brlt	.+6      	; 0x1408 <__fixsfsi+0x4e>
    1402:	66 23       	and	r22, r22
    1404:	f9 f0       	breq	.+62     	; 0x1444 <__fixsfsi+0x8a>
    1406:	23 c0       	rjmp	.+70     	; 0x144e <__fixsfsi+0x94>
    1408:	8e e1       	ldi	r24, 0x1E	; 30
    140a:	90 e0       	ldi	r25, 0x00	; 0
    140c:	82 1b       	sub	r24, r18
    140e:	93 0b       	sbc	r25, r19
    1410:	29 85       	ldd	r18, Y+9	; 0x09
    1412:	3a 85       	ldd	r19, Y+10	; 0x0a
    1414:	4b 85       	ldd	r20, Y+11	; 0x0b
    1416:	5c 85       	ldd	r21, Y+12	; 0x0c
    1418:	04 c0       	rjmp	.+8      	; 0x1422 <__fixsfsi+0x68>
    141a:	56 95       	lsr	r21
    141c:	47 95       	ror	r20
    141e:	37 95       	ror	r19
    1420:	27 95       	ror	r18
    1422:	8a 95       	dec	r24
    1424:	d2 f7       	brpl	.-12     	; 0x141a <__fixsfsi+0x60>
    1426:	66 23       	and	r22, r22
    1428:	b1 f0       	breq	.+44     	; 0x1456 <__fixsfsi+0x9c>
    142a:	50 95       	com	r21
    142c:	40 95       	com	r20
    142e:	30 95       	com	r19
    1430:	21 95       	neg	r18
    1432:	3f 4f       	sbci	r19, 0xFF	; 255
    1434:	4f 4f       	sbci	r20, 0xFF	; 255
    1436:	5f 4f       	sbci	r21, 0xFF	; 255
    1438:	0e c0       	rjmp	.+28     	; 0x1456 <__fixsfsi+0x9c>
    143a:	20 e0       	ldi	r18, 0x00	; 0
    143c:	30 e0       	ldi	r19, 0x00	; 0
    143e:	40 e0       	ldi	r20, 0x00	; 0
    1440:	50 e0       	ldi	r21, 0x00	; 0
    1442:	09 c0       	rjmp	.+18     	; 0x1456 <__fixsfsi+0x9c>
    1444:	2f ef       	ldi	r18, 0xFF	; 255
    1446:	3f ef       	ldi	r19, 0xFF	; 255
    1448:	4f ef       	ldi	r20, 0xFF	; 255
    144a:	5f e7       	ldi	r21, 0x7F	; 127
    144c:	04 c0       	rjmp	.+8      	; 0x1456 <__fixsfsi+0x9c>
    144e:	20 e0       	ldi	r18, 0x00	; 0
    1450:	30 e0       	ldi	r19, 0x00	; 0
    1452:	40 e0       	ldi	r20, 0x00	; 0
    1454:	50 e8       	ldi	r21, 0x80	; 128
    1456:	b9 01       	movw	r22, r18
    1458:	ca 01       	movw	r24, r20
    145a:	2c 96       	adiw	r28, 0x0c	; 12
    145c:	e2 e0       	ldi	r30, 0x02	; 2
    145e:	0c 94 d5 0c 	jmp	0x19aa	; 0x19aa <__epilogue_restores__+0x20>

00001462 <__clzsi2>:
    1462:	ef 92       	push	r14
    1464:	ff 92       	push	r15
    1466:	0f 93       	push	r16
    1468:	1f 93       	push	r17
    146a:	7b 01       	movw	r14, r22
    146c:	8c 01       	movw	r16, r24
    146e:	80 e0       	ldi	r24, 0x00	; 0
    1470:	e8 16       	cp	r14, r24
    1472:	80 e0       	ldi	r24, 0x00	; 0
    1474:	f8 06       	cpc	r15, r24
    1476:	81 e0       	ldi	r24, 0x01	; 1
    1478:	08 07       	cpc	r16, r24
    147a:	80 e0       	ldi	r24, 0x00	; 0
    147c:	18 07       	cpc	r17, r24
    147e:	88 f4       	brcc	.+34     	; 0x14a2 <__clzsi2+0x40>
    1480:	8f ef       	ldi	r24, 0xFF	; 255
    1482:	e8 16       	cp	r14, r24
    1484:	f1 04       	cpc	r15, r1
    1486:	01 05       	cpc	r16, r1
    1488:	11 05       	cpc	r17, r1
    148a:	31 f0       	breq	.+12     	; 0x1498 <__clzsi2+0x36>
    148c:	28 f0       	brcs	.+10     	; 0x1498 <__clzsi2+0x36>
    148e:	88 e0       	ldi	r24, 0x08	; 8
    1490:	90 e0       	ldi	r25, 0x00	; 0
    1492:	a0 e0       	ldi	r26, 0x00	; 0
    1494:	b0 e0       	ldi	r27, 0x00	; 0
    1496:	17 c0       	rjmp	.+46     	; 0x14c6 <__clzsi2+0x64>
    1498:	80 e0       	ldi	r24, 0x00	; 0
    149a:	90 e0       	ldi	r25, 0x00	; 0
    149c:	a0 e0       	ldi	r26, 0x00	; 0
    149e:	b0 e0       	ldi	r27, 0x00	; 0
    14a0:	12 c0       	rjmp	.+36     	; 0x14c6 <__clzsi2+0x64>
    14a2:	80 e0       	ldi	r24, 0x00	; 0
    14a4:	e8 16       	cp	r14, r24
    14a6:	80 e0       	ldi	r24, 0x00	; 0
    14a8:	f8 06       	cpc	r15, r24
    14aa:	80 e0       	ldi	r24, 0x00	; 0
    14ac:	08 07       	cpc	r16, r24
    14ae:	81 e0       	ldi	r24, 0x01	; 1
    14b0:	18 07       	cpc	r17, r24
    14b2:	28 f0       	brcs	.+10     	; 0x14be <__clzsi2+0x5c>
    14b4:	88 e1       	ldi	r24, 0x18	; 24
    14b6:	90 e0       	ldi	r25, 0x00	; 0
    14b8:	a0 e0       	ldi	r26, 0x00	; 0
    14ba:	b0 e0       	ldi	r27, 0x00	; 0
    14bc:	04 c0       	rjmp	.+8      	; 0x14c6 <__clzsi2+0x64>
    14be:	80 e1       	ldi	r24, 0x10	; 16
    14c0:	90 e0       	ldi	r25, 0x00	; 0
    14c2:	a0 e0       	ldi	r26, 0x00	; 0
    14c4:	b0 e0       	ldi	r27, 0x00	; 0
    14c6:	20 e2       	ldi	r18, 0x20	; 32
    14c8:	30 e0       	ldi	r19, 0x00	; 0
    14ca:	40 e0       	ldi	r20, 0x00	; 0
    14cc:	50 e0       	ldi	r21, 0x00	; 0
    14ce:	28 1b       	sub	r18, r24
    14d0:	39 0b       	sbc	r19, r25
    14d2:	4a 0b       	sbc	r20, r26
    14d4:	5b 0b       	sbc	r21, r27
    14d6:	04 c0       	rjmp	.+8      	; 0x14e0 <__clzsi2+0x7e>
    14d8:	16 95       	lsr	r17
    14da:	07 95       	ror	r16
    14dc:	f7 94       	ror	r15
    14de:	e7 94       	ror	r14
    14e0:	8a 95       	dec	r24
    14e2:	d2 f7       	brpl	.-12     	; 0x14d8 <__clzsi2+0x76>
    14e4:	f7 01       	movw	r30, r14
    14e6:	e8 5f       	subi	r30, 0xF8	; 248
    14e8:	fd 4f       	sbci	r31, 0xFD	; 253
    14ea:	80 81       	ld	r24, Z
    14ec:	28 1b       	sub	r18, r24
    14ee:	31 09       	sbc	r19, r1
    14f0:	41 09       	sbc	r20, r1
    14f2:	51 09       	sbc	r21, r1
    14f4:	c9 01       	movw	r24, r18
    14f6:	1f 91       	pop	r17
    14f8:	0f 91       	pop	r16
    14fa:	ff 90       	pop	r15
    14fc:	ef 90       	pop	r14
    14fe:	08 95       	ret

00001500 <__pack_f>:
    1500:	df 92       	push	r13
    1502:	ef 92       	push	r14
    1504:	ff 92       	push	r15
    1506:	0f 93       	push	r16
    1508:	1f 93       	push	r17
    150a:	fc 01       	movw	r30, r24
    150c:	e4 80       	ldd	r14, Z+4	; 0x04
    150e:	f5 80       	ldd	r15, Z+5	; 0x05
    1510:	06 81       	ldd	r16, Z+6	; 0x06
    1512:	17 81       	ldd	r17, Z+7	; 0x07
    1514:	d1 80       	ldd	r13, Z+1	; 0x01
    1516:	80 81       	ld	r24, Z
    1518:	82 30       	cpi	r24, 0x02	; 2
    151a:	48 f4       	brcc	.+18     	; 0x152e <__pack_f+0x2e>
    151c:	80 e0       	ldi	r24, 0x00	; 0
    151e:	90 e0       	ldi	r25, 0x00	; 0
    1520:	a0 e1       	ldi	r26, 0x10	; 16
    1522:	b0 e0       	ldi	r27, 0x00	; 0
    1524:	e8 2a       	or	r14, r24
    1526:	f9 2a       	or	r15, r25
    1528:	0a 2b       	or	r16, r26
    152a:	1b 2b       	or	r17, r27
    152c:	a5 c0       	rjmp	.+330    	; 0x1678 <__pack_f+0x178>
    152e:	84 30       	cpi	r24, 0x04	; 4
    1530:	09 f4       	brne	.+2      	; 0x1534 <__pack_f+0x34>
    1532:	9f c0       	rjmp	.+318    	; 0x1672 <__pack_f+0x172>
    1534:	82 30       	cpi	r24, 0x02	; 2
    1536:	21 f4       	brne	.+8      	; 0x1540 <__pack_f+0x40>
    1538:	ee 24       	eor	r14, r14
    153a:	ff 24       	eor	r15, r15
    153c:	87 01       	movw	r16, r14
    153e:	05 c0       	rjmp	.+10     	; 0x154a <__pack_f+0x4a>
    1540:	e1 14       	cp	r14, r1
    1542:	f1 04       	cpc	r15, r1
    1544:	01 05       	cpc	r16, r1
    1546:	11 05       	cpc	r17, r1
    1548:	19 f4       	brne	.+6      	; 0x1550 <__pack_f+0x50>
    154a:	e0 e0       	ldi	r30, 0x00	; 0
    154c:	f0 e0       	ldi	r31, 0x00	; 0
    154e:	96 c0       	rjmp	.+300    	; 0x167c <__pack_f+0x17c>
    1550:	62 81       	ldd	r22, Z+2	; 0x02
    1552:	73 81       	ldd	r23, Z+3	; 0x03
    1554:	9f ef       	ldi	r25, 0xFF	; 255
    1556:	62 38       	cpi	r22, 0x82	; 130
    1558:	79 07       	cpc	r23, r25
    155a:	0c f0       	brlt	.+2      	; 0x155e <__pack_f+0x5e>
    155c:	5b c0       	rjmp	.+182    	; 0x1614 <__pack_f+0x114>
    155e:	22 e8       	ldi	r18, 0x82	; 130
    1560:	3f ef       	ldi	r19, 0xFF	; 255
    1562:	26 1b       	sub	r18, r22
    1564:	37 0b       	sbc	r19, r23
    1566:	2a 31       	cpi	r18, 0x1A	; 26
    1568:	31 05       	cpc	r19, r1
    156a:	2c f0       	brlt	.+10     	; 0x1576 <__pack_f+0x76>
    156c:	20 e0       	ldi	r18, 0x00	; 0
    156e:	30 e0       	ldi	r19, 0x00	; 0
    1570:	40 e0       	ldi	r20, 0x00	; 0
    1572:	50 e0       	ldi	r21, 0x00	; 0
    1574:	2a c0       	rjmp	.+84     	; 0x15ca <__pack_f+0xca>
    1576:	b8 01       	movw	r22, r16
    1578:	a7 01       	movw	r20, r14
    157a:	02 2e       	mov	r0, r18
    157c:	04 c0       	rjmp	.+8      	; 0x1586 <__pack_f+0x86>
    157e:	76 95       	lsr	r23
    1580:	67 95       	ror	r22
    1582:	57 95       	ror	r21
    1584:	47 95       	ror	r20
    1586:	0a 94       	dec	r0
    1588:	d2 f7       	brpl	.-12     	; 0x157e <__pack_f+0x7e>
    158a:	81 e0       	ldi	r24, 0x01	; 1
    158c:	90 e0       	ldi	r25, 0x00	; 0
    158e:	a0 e0       	ldi	r26, 0x00	; 0
    1590:	b0 e0       	ldi	r27, 0x00	; 0
    1592:	04 c0       	rjmp	.+8      	; 0x159c <__pack_f+0x9c>
    1594:	88 0f       	add	r24, r24
    1596:	99 1f       	adc	r25, r25
    1598:	aa 1f       	adc	r26, r26
    159a:	bb 1f       	adc	r27, r27
    159c:	2a 95       	dec	r18
    159e:	d2 f7       	brpl	.-12     	; 0x1594 <__pack_f+0x94>
    15a0:	01 97       	sbiw	r24, 0x01	; 1
    15a2:	a1 09       	sbc	r26, r1
    15a4:	b1 09       	sbc	r27, r1
    15a6:	8e 21       	and	r24, r14
    15a8:	9f 21       	and	r25, r15
    15aa:	a0 23       	and	r26, r16
    15ac:	b1 23       	and	r27, r17
    15ae:	00 97       	sbiw	r24, 0x00	; 0
    15b0:	a1 05       	cpc	r26, r1
    15b2:	b1 05       	cpc	r27, r1
    15b4:	21 f0       	breq	.+8      	; 0x15be <__pack_f+0xbe>
    15b6:	81 e0       	ldi	r24, 0x01	; 1
    15b8:	90 e0       	ldi	r25, 0x00	; 0
    15ba:	a0 e0       	ldi	r26, 0x00	; 0
    15bc:	b0 e0       	ldi	r27, 0x00	; 0
    15be:	9a 01       	movw	r18, r20
    15c0:	ab 01       	movw	r20, r22
    15c2:	28 2b       	or	r18, r24
    15c4:	39 2b       	or	r19, r25
    15c6:	4a 2b       	or	r20, r26
    15c8:	5b 2b       	or	r21, r27
    15ca:	da 01       	movw	r26, r20
    15cc:	c9 01       	movw	r24, r18
    15ce:	8f 77       	andi	r24, 0x7F	; 127
    15d0:	90 70       	andi	r25, 0x00	; 0
    15d2:	a0 70       	andi	r26, 0x00	; 0
    15d4:	b0 70       	andi	r27, 0x00	; 0
    15d6:	80 34       	cpi	r24, 0x40	; 64
    15d8:	91 05       	cpc	r25, r1
    15da:	a1 05       	cpc	r26, r1
    15dc:	b1 05       	cpc	r27, r1
    15de:	39 f4       	brne	.+14     	; 0x15ee <__pack_f+0xee>
    15e0:	27 ff       	sbrs	r18, 7
    15e2:	09 c0       	rjmp	.+18     	; 0x15f6 <__pack_f+0xf6>
    15e4:	20 5c       	subi	r18, 0xC0	; 192
    15e6:	3f 4f       	sbci	r19, 0xFF	; 255
    15e8:	4f 4f       	sbci	r20, 0xFF	; 255
    15ea:	5f 4f       	sbci	r21, 0xFF	; 255
    15ec:	04 c0       	rjmp	.+8      	; 0x15f6 <__pack_f+0xf6>
    15ee:	21 5c       	subi	r18, 0xC1	; 193
    15f0:	3f 4f       	sbci	r19, 0xFF	; 255
    15f2:	4f 4f       	sbci	r20, 0xFF	; 255
    15f4:	5f 4f       	sbci	r21, 0xFF	; 255
    15f6:	e0 e0       	ldi	r30, 0x00	; 0
    15f8:	f0 e0       	ldi	r31, 0x00	; 0
    15fa:	20 30       	cpi	r18, 0x00	; 0
    15fc:	a0 e0       	ldi	r26, 0x00	; 0
    15fe:	3a 07       	cpc	r19, r26
    1600:	a0 e0       	ldi	r26, 0x00	; 0
    1602:	4a 07       	cpc	r20, r26
    1604:	a0 e4       	ldi	r26, 0x40	; 64
    1606:	5a 07       	cpc	r21, r26
    1608:	10 f0       	brcs	.+4      	; 0x160e <__pack_f+0x10e>
    160a:	e1 e0       	ldi	r30, 0x01	; 1
    160c:	f0 e0       	ldi	r31, 0x00	; 0
    160e:	79 01       	movw	r14, r18
    1610:	8a 01       	movw	r16, r20
    1612:	27 c0       	rjmp	.+78     	; 0x1662 <__pack_f+0x162>
    1614:	60 38       	cpi	r22, 0x80	; 128
    1616:	71 05       	cpc	r23, r1
    1618:	64 f5       	brge	.+88     	; 0x1672 <__pack_f+0x172>
    161a:	fb 01       	movw	r30, r22
    161c:	e1 58       	subi	r30, 0x81	; 129
    161e:	ff 4f       	sbci	r31, 0xFF	; 255
    1620:	d8 01       	movw	r26, r16
    1622:	c7 01       	movw	r24, r14
    1624:	8f 77       	andi	r24, 0x7F	; 127
    1626:	90 70       	andi	r25, 0x00	; 0
    1628:	a0 70       	andi	r26, 0x00	; 0
    162a:	b0 70       	andi	r27, 0x00	; 0
    162c:	80 34       	cpi	r24, 0x40	; 64
    162e:	91 05       	cpc	r25, r1
    1630:	a1 05       	cpc	r26, r1
    1632:	b1 05       	cpc	r27, r1
    1634:	39 f4       	brne	.+14     	; 0x1644 <__pack_f+0x144>
    1636:	e7 fe       	sbrs	r14, 7
    1638:	0d c0       	rjmp	.+26     	; 0x1654 <__pack_f+0x154>
    163a:	80 e4       	ldi	r24, 0x40	; 64
    163c:	90 e0       	ldi	r25, 0x00	; 0
    163e:	a0 e0       	ldi	r26, 0x00	; 0
    1640:	b0 e0       	ldi	r27, 0x00	; 0
    1642:	04 c0       	rjmp	.+8      	; 0x164c <__pack_f+0x14c>
    1644:	8f e3       	ldi	r24, 0x3F	; 63
    1646:	90 e0       	ldi	r25, 0x00	; 0
    1648:	a0 e0       	ldi	r26, 0x00	; 0
    164a:	b0 e0       	ldi	r27, 0x00	; 0
    164c:	e8 0e       	add	r14, r24
    164e:	f9 1e       	adc	r15, r25
    1650:	0a 1f       	adc	r16, r26
    1652:	1b 1f       	adc	r17, r27
    1654:	17 ff       	sbrs	r17, 7
    1656:	05 c0       	rjmp	.+10     	; 0x1662 <__pack_f+0x162>
    1658:	16 95       	lsr	r17
    165a:	07 95       	ror	r16
    165c:	f7 94       	ror	r15
    165e:	e7 94       	ror	r14
    1660:	31 96       	adiw	r30, 0x01	; 1
    1662:	87 e0       	ldi	r24, 0x07	; 7
    1664:	16 95       	lsr	r17
    1666:	07 95       	ror	r16
    1668:	f7 94       	ror	r15
    166a:	e7 94       	ror	r14
    166c:	8a 95       	dec	r24
    166e:	d1 f7       	brne	.-12     	; 0x1664 <__pack_f+0x164>
    1670:	05 c0       	rjmp	.+10     	; 0x167c <__pack_f+0x17c>
    1672:	ee 24       	eor	r14, r14
    1674:	ff 24       	eor	r15, r15
    1676:	87 01       	movw	r16, r14
    1678:	ef ef       	ldi	r30, 0xFF	; 255
    167a:	f0 e0       	ldi	r31, 0x00	; 0
    167c:	6e 2f       	mov	r22, r30
    167e:	67 95       	ror	r22
    1680:	66 27       	eor	r22, r22
    1682:	67 95       	ror	r22
    1684:	90 2f       	mov	r25, r16
    1686:	9f 77       	andi	r25, 0x7F	; 127
    1688:	d7 94       	ror	r13
    168a:	dd 24       	eor	r13, r13
    168c:	d7 94       	ror	r13
    168e:	8e 2f       	mov	r24, r30
    1690:	86 95       	lsr	r24
    1692:	49 2f       	mov	r20, r25
    1694:	46 2b       	or	r20, r22
    1696:	58 2f       	mov	r21, r24
    1698:	5d 29       	or	r21, r13
    169a:	b7 01       	movw	r22, r14
    169c:	ca 01       	movw	r24, r20
    169e:	1f 91       	pop	r17
    16a0:	0f 91       	pop	r16
    16a2:	ff 90       	pop	r15
    16a4:	ef 90       	pop	r14
    16a6:	df 90       	pop	r13
    16a8:	08 95       	ret

000016aa <__unpack_f>:
    16aa:	fc 01       	movw	r30, r24
    16ac:	db 01       	movw	r26, r22
    16ae:	40 81       	ld	r20, Z
    16b0:	51 81       	ldd	r21, Z+1	; 0x01
    16b2:	22 81       	ldd	r18, Z+2	; 0x02
    16b4:	62 2f       	mov	r22, r18
    16b6:	6f 77       	andi	r22, 0x7F	; 127
    16b8:	70 e0       	ldi	r23, 0x00	; 0
    16ba:	22 1f       	adc	r18, r18
    16bc:	22 27       	eor	r18, r18
    16be:	22 1f       	adc	r18, r18
    16c0:	93 81       	ldd	r25, Z+3	; 0x03
    16c2:	89 2f       	mov	r24, r25
    16c4:	88 0f       	add	r24, r24
    16c6:	82 2b       	or	r24, r18
    16c8:	28 2f       	mov	r18, r24
    16ca:	30 e0       	ldi	r19, 0x00	; 0
    16cc:	99 1f       	adc	r25, r25
    16ce:	99 27       	eor	r25, r25
    16d0:	99 1f       	adc	r25, r25
    16d2:	11 96       	adiw	r26, 0x01	; 1
    16d4:	9c 93       	st	X, r25
    16d6:	11 97       	sbiw	r26, 0x01	; 1
    16d8:	21 15       	cp	r18, r1
    16da:	31 05       	cpc	r19, r1
    16dc:	a9 f5       	brne	.+106    	; 0x1748 <__unpack_f+0x9e>
    16de:	41 15       	cp	r20, r1
    16e0:	51 05       	cpc	r21, r1
    16e2:	61 05       	cpc	r22, r1
    16e4:	71 05       	cpc	r23, r1
    16e6:	11 f4       	brne	.+4      	; 0x16ec <__unpack_f+0x42>
    16e8:	82 e0       	ldi	r24, 0x02	; 2
    16ea:	37 c0       	rjmp	.+110    	; 0x175a <__unpack_f+0xb0>
    16ec:	82 e8       	ldi	r24, 0x82	; 130
    16ee:	9f ef       	ldi	r25, 0xFF	; 255
    16f0:	13 96       	adiw	r26, 0x03	; 3
    16f2:	9c 93       	st	X, r25
    16f4:	8e 93       	st	-X, r24
    16f6:	12 97       	sbiw	r26, 0x02	; 2
    16f8:	9a 01       	movw	r18, r20
    16fa:	ab 01       	movw	r20, r22
    16fc:	67 e0       	ldi	r22, 0x07	; 7
    16fe:	22 0f       	add	r18, r18
    1700:	33 1f       	adc	r19, r19
    1702:	44 1f       	adc	r20, r20
    1704:	55 1f       	adc	r21, r21
    1706:	6a 95       	dec	r22
    1708:	d1 f7       	brne	.-12     	; 0x16fe <__unpack_f+0x54>
    170a:	83 e0       	ldi	r24, 0x03	; 3
    170c:	8c 93       	st	X, r24
    170e:	0d c0       	rjmp	.+26     	; 0x172a <__unpack_f+0x80>
    1710:	22 0f       	add	r18, r18
    1712:	33 1f       	adc	r19, r19
    1714:	44 1f       	adc	r20, r20
    1716:	55 1f       	adc	r21, r21
    1718:	12 96       	adiw	r26, 0x02	; 2
    171a:	8d 91       	ld	r24, X+
    171c:	9c 91       	ld	r25, X
    171e:	13 97       	sbiw	r26, 0x03	; 3
    1720:	01 97       	sbiw	r24, 0x01	; 1
    1722:	13 96       	adiw	r26, 0x03	; 3
    1724:	9c 93       	st	X, r25
    1726:	8e 93       	st	-X, r24
    1728:	12 97       	sbiw	r26, 0x02	; 2
    172a:	20 30       	cpi	r18, 0x00	; 0
    172c:	80 e0       	ldi	r24, 0x00	; 0
    172e:	38 07       	cpc	r19, r24
    1730:	80 e0       	ldi	r24, 0x00	; 0
    1732:	48 07       	cpc	r20, r24
    1734:	80 e4       	ldi	r24, 0x40	; 64
    1736:	58 07       	cpc	r21, r24
    1738:	58 f3       	brcs	.-42     	; 0x1710 <__unpack_f+0x66>
    173a:	14 96       	adiw	r26, 0x04	; 4
    173c:	2d 93       	st	X+, r18
    173e:	3d 93       	st	X+, r19
    1740:	4d 93       	st	X+, r20
    1742:	5c 93       	st	X, r21
    1744:	17 97       	sbiw	r26, 0x07	; 7
    1746:	08 95       	ret
    1748:	2f 3f       	cpi	r18, 0xFF	; 255
    174a:	31 05       	cpc	r19, r1
    174c:	79 f4       	brne	.+30     	; 0x176c <__unpack_f+0xc2>
    174e:	41 15       	cp	r20, r1
    1750:	51 05       	cpc	r21, r1
    1752:	61 05       	cpc	r22, r1
    1754:	71 05       	cpc	r23, r1
    1756:	19 f4       	brne	.+6      	; 0x175e <__unpack_f+0xb4>
    1758:	84 e0       	ldi	r24, 0x04	; 4
    175a:	8c 93       	st	X, r24
    175c:	08 95       	ret
    175e:	64 ff       	sbrs	r22, 4
    1760:	03 c0       	rjmp	.+6      	; 0x1768 <__unpack_f+0xbe>
    1762:	81 e0       	ldi	r24, 0x01	; 1
    1764:	8c 93       	st	X, r24
    1766:	12 c0       	rjmp	.+36     	; 0x178c <__unpack_f+0xe2>
    1768:	1c 92       	st	X, r1
    176a:	10 c0       	rjmp	.+32     	; 0x178c <__unpack_f+0xe2>
    176c:	2f 57       	subi	r18, 0x7F	; 127
    176e:	30 40       	sbci	r19, 0x00	; 0
    1770:	13 96       	adiw	r26, 0x03	; 3
    1772:	3c 93       	st	X, r19
    1774:	2e 93       	st	-X, r18
    1776:	12 97       	sbiw	r26, 0x02	; 2
    1778:	83 e0       	ldi	r24, 0x03	; 3
    177a:	8c 93       	st	X, r24
    177c:	87 e0       	ldi	r24, 0x07	; 7
    177e:	44 0f       	add	r20, r20
    1780:	55 1f       	adc	r21, r21
    1782:	66 1f       	adc	r22, r22
    1784:	77 1f       	adc	r23, r23
    1786:	8a 95       	dec	r24
    1788:	d1 f7       	brne	.-12     	; 0x177e <__unpack_f+0xd4>
    178a:	70 64       	ori	r23, 0x40	; 64
    178c:	14 96       	adiw	r26, 0x04	; 4
    178e:	4d 93       	st	X+, r20
    1790:	5d 93       	st	X+, r21
    1792:	6d 93       	st	X+, r22
    1794:	7c 93       	st	X, r23
    1796:	17 97       	sbiw	r26, 0x07	; 7
    1798:	08 95       	ret

0000179a <__fpcmp_parts_f>:
    179a:	1f 93       	push	r17
    179c:	dc 01       	movw	r26, r24
    179e:	fb 01       	movw	r30, r22
    17a0:	9c 91       	ld	r25, X
    17a2:	92 30       	cpi	r25, 0x02	; 2
    17a4:	08 f4       	brcc	.+2      	; 0x17a8 <__fpcmp_parts_f+0xe>
    17a6:	47 c0       	rjmp	.+142    	; 0x1836 <__fpcmp_parts_f+0x9c>
    17a8:	80 81       	ld	r24, Z
    17aa:	82 30       	cpi	r24, 0x02	; 2
    17ac:	08 f4       	brcc	.+2      	; 0x17b0 <__fpcmp_parts_f+0x16>
    17ae:	43 c0       	rjmp	.+134    	; 0x1836 <__fpcmp_parts_f+0x9c>
    17b0:	94 30       	cpi	r25, 0x04	; 4
    17b2:	51 f4       	brne	.+20     	; 0x17c8 <__fpcmp_parts_f+0x2e>
    17b4:	11 96       	adiw	r26, 0x01	; 1
    17b6:	1c 91       	ld	r17, X
    17b8:	84 30       	cpi	r24, 0x04	; 4
    17ba:	99 f5       	brne	.+102    	; 0x1822 <__fpcmp_parts_f+0x88>
    17bc:	81 81       	ldd	r24, Z+1	; 0x01
    17be:	68 2f       	mov	r22, r24
    17c0:	70 e0       	ldi	r23, 0x00	; 0
    17c2:	61 1b       	sub	r22, r17
    17c4:	71 09       	sbc	r23, r1
    17c6:	3f c0       	rjmp	.+126    	; 0x1846 <__fpcmp_parts_f+0xac>
    17c8:	84 30       	cpi	r24, 0x04	; 4
    17ca:	21 f0       	breq	.+8      	; 0x17d4 <__fpcmp_parts_f+0x3a>
    17cc:	92 30       	cpi	r25, 0x02	; 2
    17ce:	31 f4       	brne	.+12     	; 0x17dc <__fpcmp_parts_f+0x42>
    17d0:	82 30       	cpi	r24, 0x02	; 2
    17d2:	b9 f1       	breq	.+110    	; 0x1842 <__fpcmp_parts_f+0xa8>
    17d4:	81 81       	ldd	r24, Z+1	; 0x01
    17d6:	88 23       	and	r24, r24
    17d8:	89 f1       	breq	.+98     	; 0x183c <__fpcmp_parts_f+0xa2>
    17da:	2d c0       	rjmp	.+90     	; 0x1836 <__fpcmp_parts_f+0x9c>
    17dc:	11 96       	adiw	r26, 0x01	; 1
    17de:	1c 91       	ld	r17, X
    17e0:	11 97       	sbiw	r26, 0x01	; 1
    17e2:	82 30       	cpi	r24, 0x02	; 2
    17e4:	f1 f0       	breq	.+60     	; 0x1822 <__fpcmp_parts_f+0x88>
    17e6:	81 81       	ldd	r24, Z+1	; 0x01
    17e8:	18 17       	cp	r17, r24
    17ea:	d9 f4       	brne	.+54     	; 0x1822 <__fpcmp_parts_f+0x88>
    17ec:	12 96       	adiw	r26, 0x02	; 2
    17ee:	2d 91       	ld	r18, X+
    17f0:	3c 91       	ld	r19, X
    17f2:	13 97       	sbiw	r26, 0x03	; 3
    17f4:	82 81       	ldd	r24, Z+2	; 0x02
    17f6:	93 81       	ldd	r25, Z+3	; 0x03
    17f8:	82 17       	cp	r24, r18
    17fa:	93 07       	cpc	r25, r19
    17fc:	94 f0       	brlt	.+36     	; 0x1822 <__fpcmp_parts_f+0x88>
    17fe:	28 17       	cp	r18, r24
    1800:	39 07       	cpc	r19, r25
    1802:	bc f0       	brlt	.+46     	; 0x1832 <__fpcmp_parts_f+0x98>
    1804:	14 96       	adiw	r26, 0x04	; 4
    1806:	8d 91       	ld	r24, X+
    1808:	9d 91       	ld	r25, X+
    180a:	0d 90       	ld	r0, X+
    180c:	bc 91       	ld	r27, X
    180e:	a0 2d       	mov	r26, r0
    1810:	24 81       	ldd	r18, Z+4	; 0x04
    1812:	35 81       	ldd	r19, Z+5	; 0x05
    1814:	46 81       	ldd	r20, Z+6	; 0x06
    1816:	57 81       	ldd	r21, Z+7	; 0x07
    1818:	28 17       	cp	r18, r24
    181a:	39 07       	cpc	r19, r25
    181c:	4a 07       	cpc	r20, r26
    181e:	5b 07       	cpc	r21, r27
    1820:	18 f4       	brcc	.+6      	; 0x1828 <__fpcmp_parts_f+0x8e>
    1822:	11 23       	and	r17, r17
    1824:	41 f0       	breq	.+16     	; 0x1836 <__fpcmp_parts_f+0x9c>
    1826:	0a c0       	rjmp	.+20     	; 0x183c <__fpcmp_parts_f+0xa2>
    1828:	82 17       	cp	r24, r18
    182a:	93 07       	cpc	r25, r19
    182c:	a4 07       	cpc	r26, r20
    182e:	b5 07       	cpc	r27, r21
    1830:	40 f4       	brcc	.+16     	; 0x1842 <__fpcmp_parts_f+0xa8>
    1832:	11 23       	and	r17, r17
    1834:	19 f0       	breq	.+6      	; 0x183c <__fpcmp_parts_f+0xa2>
    1836:	61 e0       	ldi	r22, 0x01	; 1
    1838:	70 e0       	ldi	r23, 0x00	; 0
    183a:	05 c0       	rjmp	.+10     	; 0x1846 <__fpcmp_parts_f+0xac>
    183c:	6f ef       	ldi	r22, 0xFF	; 255
    183e:	7f ef       	ldi	r23, 0xFF	; 255
    1840:	02 c0       	rjmp	.+4      	; 0x1846 <__fpcmp_parts_f+0xac>
    1842:	60 e0       	ldi	r22, 0x00	; 0
    1844:	70 e0       	ldi	r23, 0x00	; 0
    1846:	cb 01       	movw	r24, r22
    1848:	1f 91       	pop	r17
    184a:	08 95       	ret

0000184c <__mulsi3>:
    184c:	62 9f       	mul	r22, r18
    184e:	d0 01       	movw	r26, r0
    1850:	73 9f       	mul	r23, r19
    1852:	f0 01       	movw	r30, r0
    1854:	82 9f       	mul	r24, r18
    1856:	e0 0d       	add	r30, r0
    1858:	f1 1d       	adc	r31, r1
    185a:	64 9f       	mul	r22, r20
    185c:	e0 0d       	add	r30, r0
    185e:	f1 1d       	adc	r31, r1
    1860:	92 9f       	mul	r25, r18
    1862:	f0 0d       	add	r31, r0
    1864:	83 9f       	mul	r24, r19
    1866:	f0 0d       	add	r31, r0
    1868:	74 9f       	mul	r23, r20
    186a:	f0 0d       	add	r31, r0
    186c:	65 9f       	mul	r22, r21
    186e:	f0 0d       	add	r31, r0
    1870:	99 27       	eor	r25, r25
    1872:	72 9f       	mul	r23, r18
    1874:	b0 0d       	add	r27, r0
    1876:	e1 1d       	adc	r30, r1
    1878:	f9 1f       	adc	r31, r25
    187a:	63 9f       	mul	r22, r19
    187c:	b0 0d       	add	r27, r0
    187e:	e1 1d       	adc	r30, r1
    1880:	f9 1f       	adc	r31, r25
    1882:	bd 01       	movw	r22, r26
    1884:	cf 01       	movw	r24, r30
    1886:	11 24       	eor	r1, r1
    1888:	08 95       	ret

0000188a <__divmodhi4>:
    188a:	97 fb       	bst	r25, 7
    188c:	09 2e       	mov	r0, r25
    188e:	07 26       	eor	r0, r23
    1890:	0a d0       	rcall	.+20     	; 0x18a6 <__divmodhi4_neg1>
    1892:	77 fd       	sbrc	r23, 7
    1894:	04 d0       	rcall	.+8      	; 0x189e <__divmodhi4_neg2>
    1896:	27 d0       	rcall	.+78     	; 0x18e6 <__udivmodhi4>
    1898:	06 d0       	rcall	.+12     	; 0x18a6 <__divmodhi4_neg1>
    189a:	00 20       	and	r0, r0
    189c:	1a f4       	brpl	.+6      	; 0x18a4 <__divmodhi4_exit>

0000189e <__divmodhi4_neg2>:
    189e:	70 95       	com	r23
    18a0:	61 95       	neg	r22
    18a2:	7f 4f       	sbci	r23, 0xFF	; 255

000018a4 <__divmodhi4_exit>:
    18a4:	08 95       	ret

000018a6 <__divmodhi4_neg1>:
    18a6:	f6 f7       	brtc	.-4      	; 0x18a4 <__divmodhi4_exit>
    18a8:	90 95       	com	r25
    18aa:	81 95       	neg	r24
    18ac:	9f 4f       	sbci	r25, 0xFF	; 255
    18ae:	08 95       	ret

000018b0 <__divmodsi4>:
    18b0:	97 fb       	bst	r25, 7
    18b2:	09 2e       	mov	r0, r25
    18b4:	05 26       	eor	r0, r21
    18b6:	0e d0       	rcall	.+28     	; 0x18d4 <__divmodsi4_neg1>
    18b8:	57 fd       	sbrc	r21, 7
    18ba:	04 d0       	rcall	.+8      	; 0x18c4 <__divmodsi4_neg2>
    18bc:	28 d0       	rcall	.+80     	; 0x190e <__udivmodsi4>
    18be:	0a d0       	rcall	.+20     	; 0x18d4 <__divmodsi4_neg1>
    18c0:	00 1c       	adc	r0, r0
    18c2:	38 f4       	brcc	.+14     	; 0x18d2 <__divmodsi4_exit>

000018c4 <__divmodsi4_neg2>:
    18c4:	50 95       	com	r21
    18c6:	40 95       	com	r20
    18c8:	30 95       	com	r19
    18ca:	21 95       	neg	r18
    18cc:	3f 4f       	sbci	r19, 0xFF	; 255
    18ce:	4f 4f       	sbci	r20, 0xFF	; 255
    18d0:	5f 4f       	sbci	r21, 0xFF	; 255

000018d2 <__divmodsi4_exit>:
    18d2:	08 95       	ret

000018d4 <__divmodsi4_neg1>:
    18d4:	f6 f7       	brtc	.-4      	; 0x18d2 <__divmodsi4_exit>
    18d6:	90 95       	com	r25
    18d8:	80 95       	com	r24
    18da:	70 95       	com	r23
    18dc:	61 95       	neg	r22
    18de:	7f 4f       	sbci	r23, 0xFF	; 255
    18e0:	8f 4f       	sbci	r24, 0xFF	; 255
    18e2:	9f 4f       	sbci	r25, 0xFF	; 255
    18e4:	08 95       	ret

000018e6 <__udivmodhi4>:
    18e6:	aa 1b       	sub	r26, r26
    18e8:	bb 1b       	sub	r27, r27
    18ea:	51 e1       	ldi	r21, 0x11	; 17
    18ec:	07 c0       	rjmp	.+14     	; 0x18fc <__udivmodhi4_ep>

000018ee <__udivmodhi4_loop>:
    18ee:	aa 1f       	adc	r26, r26
    18f0:	bb 1f       	adc	r27, r27
    18f2:	a6 17       	cp	r26, r22
    18f4:	b7 07       	cpc	r27, r23
    18f6:	10 f0       	brcs	.+4      	; 0x18fc <__udivmodhi4_ep>
    18f8:	a6 1b       	sub	r26, r22
    18fa:	b7 0b       	sbc	r27, r23

000018fc <__udivmodhi4_ep>:
    18fc:	88 1f       	adc	r24, r24
    18fe:	99 1f       	adc	r25, r25
    1900:	5a 95       	dec	r21
    1902:	a9 f7       	brne	.-22     	; 0x18ee <__udivmodhi4_loop>
    1904:	80 95       	com	r24
    1906:	90 95       	com	r25
    1908:	bc 01       	movw	r22, r24
    190a:	cd 01       	movw	r24, r26
    190c:	08 95       	ret

0000190e <__udivmodsi4>:
    190e:	a1 e2       	ldi	r26, 0x21	; 33
    1910:	1a 2e       	mov	r1, r26
    1912:	aa 1b       	sub	r26, r26
    1914:	bb 1b       	sub	r27, r27
    1916:	fd 01       	movw	r30, r26
    1918:	0d c0       	rjmp	.+26     	; 0x1934 <__udivmodsi4_ep>

0000191a <__udivmodsi4_loop>:
    191a:	aa 1f       	adc	r26, r26
    191c:	bb 1f       	adc	r27, r27
    191e:	ee 1f       	adc	r30, r30
    1920:	ff 1f       	adc	r31, r31
    1922:	a2 17       	cp	r26, r18
    1924:	b3 07       	cpc	r27, r19
    1926:	e4 07       	cpc	r30, r20
    1928:	f5 07       	cpc	r31, r21
    192a:	20 f0       	brcs	.+8      	; 0x1934 <__udivmodsi4_ep>
    192c:	a2 1b       	sub	r26, r18
    192e:	b3 0b       	sbc	r27, r19
    1930:	e4 0b       	sbc	r30, r20
    1932:	f5 0b       	sbc	r31, r21

00001934 <__udivmodsi4_ep>:
    1934:	66 1f       	adc	r22, r22
    1936:	77 1f       	adc	r23, r23
    1938:	88 1f       	adc	r24, r24
    193a:	99 1f       	adc	r25, r25
    193c:	1a 94       	dec	r1
    193e:	69 f7       	brne	.-38     	; 0x191a <__udivmodsi4_loop>
    1940:	60 95       	com	r22
    1942:	70 95       	com	r23
    1944:	80 95       	com	r24
    1946:	90 95       	com	r25
    1948:	9b 01       	movw	r18, r22
    194a:	ac 01       	movw	r20, r24
    194c:	bd 01       	movw	r22, r26
    194e:	cf 01       	movw	r24, r30
    1950:	08 95       	ret

00001952 <__prologue_saves__>:
    1952:	2f 92       	push	r2
    1954:	3f 92       	push	r3
    1956:	4f 92       	push	r4
    1958:	5f 92       	push	r5
    195a:	6f 92       	push	r6
    195c:	7f 92       	push	r7
    195e:	8f 92       	push	r8
    1960:	9f 92       	push	r9
    1962:	af 92       	push	r10
    1964:	bf 92       	push	r11
    1966:	cf 92       	push	r12
    1968:	df 92       	push	r13
    196a:	ef 92       	push	r14
    196c:	ff 92       	push	r15
    196e:	0f 93       	push	r16
    1970:	1f 93       	push	r17
    1972:	cf 93       	push	r28
    1974:	df 93       	push	r29
    1976:	cd b7       	in	r28, 0x3d	; 61
    1978:	de b7       	in	r29, 0x3e	; 62
    197a:	ca 1b       	sub	r28, r26
    197c:	db 0b       	sbc	r29, r27
    197e:	0f b6       	in	r0, 0x3f	; 63
    1980:	f8 94       	cli
    1982:	de bf       	out	0x3e, r29	; 62
    1984:	0f be       	out	0x3f, r0	; 63
    1986:	cd bf       	out	0x3d, r28	; 61
    1988:	19 94       	eijmp

0000198a <__epilogue_restores__>:
    198a:	2a 88       	ldd	r2, Y+18	; 0x12
    198c:	39 88       	ldd	r3, Y+17	; 0x11
    198e:	48 88       	ldd	r4, Y+16	; 0x10
    1990:	5f 84       	ldd	r5, Y+15	; 0x0f
    1992:	6e 84       	ldd	r6, Y+14	; 0x0e
    1994:	7d 84       	ldd	r7, Y+13	; 0x0d
    1996:	8c 84       	ldd	r8, Y+12	; 0x0c
    1998:	9b 84       	ldd	r9, Y+11	; 0x0b
    199a:	aa 84       	ldd	r10, Y+10	; 0x0a
    199c:	b9 84       	ldd	r11, Y+9	; 0x09
    199e:	c8 84       	ldd	r12, Y+8	; 0x08
    19a0:	df 80       	ldd	r13, Y+7	; 0x07
    19a2:	ee 80       	ldd	r14, Y+6	; 0x06
    19a4:	fd 80       	ldd	r15, Y+5	; 0x05
    19a6:	0c 81       	ldd	r16, Y+4	; 0x04
    19a8:	1b 81       	ldd	r17, Y+3	; 0x03
    19aa:	aa 81       	ldd	r26, Y+2	; 0x02
    19ac:	b9 81       	ldd	r27, Y+1	; 0x01
    19ae:	ce 0f       	add	r28, r30
    19b0:	d1 1d       	adc	r29, r1
    19b2:	0f b6       	in	r0, 0x3f	; 63
    19b4:	f8 94       	cli
    19b6:	de bf       	out	0x3e, r29	; 62
    19b8:	0f be       	out	0x3f, r0	; 63
    19ba:	cd bf       	out	0x3d, r28	; 61
    19bc:	ed 01       	movw	r28, r26
    19be:	08 95       	ret

000019c0 <_exit>:
    19c0:	f8 94       	cli

000019c2 <__stop_program>:
    19c2:	ff cf       	rjmp	.-2      	; 0x19c2 <__stop_program>
